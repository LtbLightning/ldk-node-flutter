// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target, unnecessary_question_mark

part of 'error.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more information: https://github.com/rrousselGit/freezed#adding-getters-and-methods-to-our-models');

/// @nodoc
mixin _$Bolt12ParseError {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $Bolt12ParseErrorCopyWith<$Res> {
  factory $Bolt12ParseErrorCopyWith(
          Bolt12ParseError value, $Res Function(Bolt12ParseError) then) =
      _$Bolt12ParseErrorCopyWithImpl<$Res, Bolt12ParseError>;
}

/// @nodoc
class _$Bolt12ParseErrorCopyWithImpl<$Res, $Val extends Bolt12ParseError>
    implements $Bolt12ParseErrorCopyWith<$Res> {
  _$Bolt12ParseErrorCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;
}

/// @nodoc
abstract class _$$Bolt12ParseError_InvalidContinuationImplCopyWith<$Res> {
  factory _$$Bolt12ParseError_InvalidContinuationImplCopyWith(
          _$Bolt12ParseError_InvalidContinuationImpl value,
          $Res Function(_$Bolt12ParseError_InvalidContinuationImpl) then) =
      __$$Bolt12ParseError_InvalidContinuationImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$Bolt12ParseError_InvalidContinuationImplCopyWithImpl<$Res>
    extends _$Bolt12ParseErrorCopyWithImpl<$Res,
        _$Bolt12ParseError_InvalidContinuationImpl>
    implements _$$Bolt12ParseError_InvalidContinuationImplCopyWith<$Res> {
  __$$Bolt12ParseError_InvalidContinuationImplCopyWithImpl(
      _$Bolt12ParseError_InvalidContinuationImpl _value,
      $Res Function(_$Bolt12ParseError_InvalidContinuationImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$Bolt12ParseError_InvalidContinuationImpl
    extends Bolt12ParseError_InvalidContinuation {
  const _$Bolt12ParseError_InvalidContinuationImpl() : super._();

  @override
  String toString() {
    return 'Bolt12ParseError.invalidContinuation()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Bolt12ParseError_InvalidContinuationImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) {
    return invalidContinuation();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) {
    return invalidContinuation?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidContinuation != null) {
      return invalidContinuation();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) {
    return invalidContinuation(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) {
    return invalidContinuation?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidContinuation != null) {
      return invalidContinuation(this);
    }
    return orElse();
  }
}

abstract class Bolt12ParseError_InvalidContinuation extends Bolt12ParseError {
  const factory Bolt12ParseError_InvalidContinuation() =
      _$Bolt12ParseError_InvalidContinuationImpl;
  const Bolt12ParseError_InvalidContinuation._() : super._();
}

/// @nodoc
abstract class _$$Bolt12ParseError_InvalidBech32HrpImplCopyWith<$Res> {
  factory _$$Bolt12ParseError_InvalidBech32HrpImplCopyWith(
          _$Bolt12ParseError_InvalidBech32HrpImpl value,
          $Res Function(_$Bolt12ParseError_InvalidBech32HrpImpl) then) =
      __$$Bolt12ParseError_InvalidBech32HrpImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$Bolt12ParseError_InvalidBech32HrpImplCopyWithImpl<$Res>
    extends _$Bolt12ParseErrorCopyWithImpl<$Res,
        _$Bolt12ParseError_InvalidBech32HrpImpl>
    implements _$$Bolt12ParseError_InvalidBech32HrpImplCopyWith<$Res> {
  __$$Bolt12ParseError_InvalidBech32HrpImplCopyWithImpl(
      _$Bolt12ParseError_InvalidBech32HrpImpl _value,
      $Res Function(_$Bolt12ParseError_InvalidBech32HrpImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$Bolt12ParseError_InvalidBech32HrpImpl
    extends Bolt12ParseError_InvalidBech32Hrp {
  const _$Bolt12ParseError_InvalidBech32HrpImpl() : super._();

  @override
  String toString() {
    return 'Bolt12ParseError.invalidBech32Hrp()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Bolt12ParseError_InvalidBech32HrpImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) {
    return invalidBech32Hrp();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) {
    return invalidBech32Hrp?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidBech32Hrp != null) {
      return invalidBech32Hrp();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) {
    return invalidBech32Hrp(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) {
    return invalidBech32Hrp?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidBech32Hrp != null) {
      return invalidBech32Hrp(this);
    }
    return orElse();
  }
}

abstract class Bolt12ParseError_InvalidBech32Hrp extends Bolt12ParseError {
  const factory Bolt12ParseError_InvalidBech32Hrp() =
      _$Bolt12ParseError_InvalidBech32HrpImpl;
  const Bolt12ParseError_InvalidBech32Hrp._() : super._();
}

/// @nodoc
abstract class _$$Bolt12ParseError_Bech32ImplCopyWith<$Res> {
  factory _$$Bolt12ParseError_Bech32ImplCopyWith(
          _$Bolt12ParseError_Bech32Impl value,
          $Res Function(_$Bolt12ParseError_Bech32Impl) then) =
      __$$Bolt12ParseError_Bech32ImplCopyWithImpl<$Res>;
  @useResult
  $Res call({String field0});
}

/// @nodoc
class __$$Bolt12ParseError_Bech32ImplCopyWithImpl<$Res>
    extends _$Bolt12ParseErrorCopyWithImpl<$Res, _$Bolt12ParseError_Bech32Impl>
    implements _$$Bolt12ParseError_Bech32ImplCopyWith<$Res> {
  __$$Bolt12ParseError_Bech32ImplCopyWithImpl(
      _$Bolt12ParseError_Bech32Impl _value,
      $Res Function(_$Bolt12ParseError_Bech32Impl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$Bolt12ParseError_Bech32Impl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$Bolt12ParseError_Bech32Impl extends Bolt12ParseError_Bech32 {
  const _$Bolt12ParseError_Bech32Impl(this.field0) : super._();

  @override
  final String field0;

  @override
  String toString() {
    return 'Bolt12ParseError.bech32(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Bolt12ParseError_Bech32Impl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$Bolt12ParseError_Bech32ImplCopyWith<_$Bolt12ParseError_Bech32Impl>
      get copyWith => __$$Bolt12ParseError_Bech32ImplCopyWithImpl<
          _$Bolt12ParseError_Bech32Impl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) {
    return bech32(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) {
    return bech32?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) {
    if (bech32 != null) {
      return bech32(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) {
    return bech32(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) {
    return bech32?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) {
    if (bech32 != null) {
      return bech32(this);
    }
    return orElse();
  }
}

abstract class Bolt12ParseError_Bech32 extends Bolt12ParseError {
  const factory Bolt12ParseError_Bech32(final String field0) =
      _$Bolt12ParseError_Bech32Impl;
  const Bolt12ParseError_Bech32._() : super._();

  String get field0;
  @JsonKey(ignore: true)
  _$$Bolt12ParseError_Bech32ImplCopyWith<_$Bolt12ParseError_Bech32Impl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$Bolt12ParseError_DecodeImplCopyWith<$Res> {
  factory _$$Bolt12ParseError_DecodeImplCopyWith(
          _$Bolt12ParseError_DecodeImpl value,
          $Res Function(_$Bolt12ParseError_DecodeImpl) then) =
      __$$Bolt12ParseError_DecodeImplCopyWithImpl<$Res>;
  @useResult
  $Res call({DecodeError field0});

  $DecodeErrorCopyWith<$Res> get field0;
}

/// @nodoc
class __$$Bolt12ParseError_DecodeImplCopyWithImpl<$Res>
    extends _$Bolt12ParseErrorCopyWithImpl<$Res, _$Bolt12ParseError_DecodeImpl>
    implements _$$Bolt12ParseError_DecodeImplCopyWith<$Res> {
  __$$Bolt12ParseError_DecodeImplCopyWithImpl(
      _$Bolt12ParseError_DecodeImpl _value,
      $Res Function(_$Bolt12ParseError_DecodeImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$Bolt12ParseError_DecodeImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as DecodeError,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DecodeErrorCopyWith<$Res> get field0 {
    return $DecodeErrorCopyWith<$Res>(_value.field0, (value) {
      return _then(_value.copyWith(field0: value));
    });
  }
}

/// @nodoc

class _$Bolt12ParseError_DecodeImpl extends Bolt12ParseError_Decode {
  const _$Bolt12ParseError_DecodeImpl(this.field0) : super._();

  @override
  final DecodeError field0;

  @override
  String toString() {
    return 'Bolt12ParseError.decode(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Bolt12ParseError_DecodeImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$Bolt12ParseError_DecodeImplCopyWith<_$Bolt12ParseError_DecodeImpl>
      get copyWith => __$$Bolt12ParseError_DecodeImplCopyWithImpl<
          _$Bolt12ParseError_DecodeImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) {
    return decode(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) {
    return decode?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) {
    if (decode != null) {
      return decode(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) {
    return decode(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) {
    return decode?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) {
    if (decode != null) {
      return decode(this);
    }
    return orElse();
  }
}

abstract class Bolt12ParseError_Decode extends Bolt12ParseError {
  const factory Bolt12ParseError_Decode(final DecodeError field0) =
      _$Bolt12ParseError_DecodeImpl;
  const Bolt12ParseError_Decode._() : super._();

  DecodeError get field0;
  @JsonKey(ignore: true)
  _$$Bolt12ParseError_DecodeImplCopyWith<_$Bolt12ParseError_DecodeImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$Bolt12ParseError_InvalidSemanticsImplCopyWith<$Res> {
  factory _$$Bolt12ParseError_InvalidSemanticsImplCopyWith(
          _$Bolt12ParseError_InvalidSemanticsImpl value,
          $Res Function(_$Bolt12ParseError_InvalidSemanticsImpl) then) =
      __$$Bolt12ParseError_InvalidSemanticsImplCopyWithImpl<$Res>;
  @useResult
  $Res call({String field0});
}

/// @nodoc
class __$$Bolt12ParseError_InvalidSemanticsImplCopyWithImpl<$Res>
    extends _$Bolt12ParseErrorCopyWithImpl<$Res,
        _$Bolt12ParseError_InvalidSemanticsImpl>
    implements _$$Bolt12ParseError_InvalidSemanticsImplCopyWith<$Res> {
  __$$Bolt12ParseError_InvalidSemanticsImplCopyWithImpl(
      _$Bolt12ParseError_InvalidSemanticsImpl _value,
      $Res Function(_$Bolt12ParseError_InvalidSemanticsImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$Bolt12ParseError_InvalidSemanticsImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$Bolt12ParseError_InvalidSemanticsImpl
    extends Bolt12ParseError_InvalidSemantics {
  const _$Bolt12ParseError_InvalidSemanticsImpl(this.field0) : super._();

  @override
  final String field0;

  @override
  String toString() {
    return 'Bolt12ParseError.invalidSemantics(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Bolt12ParseError_InvalidSemanticsImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$Bolt12ParseError_InvalidSemanticsImplCopyWith<
          _$Bolt12ParseError_InvalidSemanticsImpl>
      get copyWith => __$$Bolt12ParseError_InvalidSemanticsImplCopyWithImpl<
          _$Bolt12ParseError_InvalidSemanticsImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) {
    return invalidSemantics(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) {
    return invalidSemantics?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidSemantics != null) {
      return invalidSemantics(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) {
    return invalidSemantics(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) {
    return invalidSemantics?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidSemantics != null) {
      return invalidSemantics(this);
    }
    return orElse();
  }
}

abstract class Bolt12ParseError_InvalidSemantics extends Bolt12ParseError {
  const factory Bolt12ParseError_InvalidSemantics(final String field0) =
      _$Bolt12ParseError_InvalidSemanticsImpl;
  const Bolt12ParseError_InvalidSemantics._() : super._();

  String get field0;
  @JsonKey(ignore: true)
  _$$Bolt12ParseError_InvalidSemanticsImplCopyWith<
          _$Bolt12ParseError_InvalidSemanticsImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$Bolt12ParseError_InvalidSignatureImplCopyWith<$Res> {
  factory _$$Bolt12ParseError_InvalidSignatureImplCopyWith(
          _$Bolt12ParseError_InvalidSignatureImpl value,
          $Res Function(_$Bolt12ParseError_InvalidSignatureImpl) then) =
      __$$Bolt12ParseError_InvalidSignatureImplCopyWithImpl<$Res>;
  @useResult
  $Res call({String field0});
}

/// @nodoc
class __$$Bolt12ParseError_InvalidSignatureImplCopyWithImpl<$Res>
    extends _$Bolt12ParseErrorCopyWithImpl<$Res,
        _$Bolt12ParseError_InvalidSignatureImpl>
    implements _$$Bolt12ParseError_InvalidSignatureImplCopyWith<$Res> {
  __$$Bolt12ParseError_InvalidSignatureImplCopyWithImpl(
      _$Bolt12ParseError_InvalidSignatureImpl _value,
      $Res Function(_$Bolt12ParseError_InvalidSignatureImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$Bolt12ParseError_InvalidSignatureImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$Bolt12ParseError_InvalidSignatureImpl
    extends Bolt12ParseError_InvalidSignature {
  const _$Bolt12ParseError_InvalidSignatureImpl(this.field0) : super._();

  @override
  final String field0;

  @override
  String toString() {
    return 'Bolt12ParseError.invalidSignature(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$Bolt12ParseError_InvalidSignatureImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$Bolt12ParseError_InvalidSignatureImplCopyWith<
          _$Bolt12ParseError_InvalidSignatureImpl>
      get copyWith => __$$Bolt12ParseError_InvalidSignatureImplCopyWithImpl<
          _$Bolt12ParseError_InvalidSignatureImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidContinuation,
    required TResult Function() invalidBech32Hrp,
    required TResult Function(String field0) bech32,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(String field0) invalidSemantics,
    required TResult Function(String field0) invalidSignature,
  }) {
    return invalidSignature(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidContinuation,
    TResult? Function()? invalidBech32Hrp,
    TResult? Function(String field0)? bech32,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(String field0)? invalidSemantics,
    TResult? Function(String field0)? invalidSignature,
  }) {
    return invalidSignature?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidContinuation,
    TResult Function()? invalidBech32Hrp,
    TResult Function(String field0)? bech32,
    TResult Function(DecodeError field0)? decode,
    TResult Function(String field0)? invalidSemantics,
    TResult Function(String field0)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidSignature != null) {
      return invalidSignature(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(Bolt12ParseError_InvalidContinuation value)
        invalidContinuation,
    required TResult Function(Bolt12ParseError_InvalidBech32Hrp value)
        invalidBech32Hrp,
    required TResult Function(Bolt12ParseError_Bech32 value) bech32,
    required TResult Function(Bolt12ParseError_Decode value) decode,
    required TResult Function(Bolt12ParseError_InvalidSemantics value)
        invalidSemantics,
    required TResult Function(Bolt12ParseError_InvalidSignature value)
        invalidSignature,
  }) {
    return invalidSignature(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult? Function(Bolt12ParseError_InvalidBech32Hrp value)?
        invalidBech32Hrp,
    TResult? Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult? Function(Bolt12ParseError_Decode value)? decode,
    TResult? Function(Bolt12ParseError_InvalidSemantics value)?
        invalidSemantics,
    TResult? Function(Bolt12ParseError_InvalidSignature value)?
        invalidSignature,
  }) {
    return invalidSignature?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(Bolt12ParseError_InvalidContinuation value)?
        invalidContinuation,
    TResult Function(Bolt12ParseError_InvalidBech32Hrp value)? invalidBech32Hrp,
    TResult Function(Bolt12ParseError_Bech32 value)? bech32,
    TResult Function(Bolt12ParseError_Decode value)? decode,
    TResult Function(Bolt12ParseError_InvalidSemantics value)? invalidSemantics,
    TResult Function(Bolt12ParseError_InvalidSignature value)? invalidSignature,
    required TResult orElse(),
  }) {
    if (invalidSignature != null) {
      return invalidSignature(this);
    }
    return orElse();
  }
}

abstract class Bolt12ParseError_InvalidSignature extends Bolt12ParseError {
  const factory Bolt12ParseError_InvalidSignature(final String field0) =
      _$Bolt12ParseError_InvalidSignatureImpl;
  const Bolt12ParseError_InvalidSignature._() : super._();

  String get field0;
  @JsonKey(ignore: true)
  _$$Bolt12ParseError_InvalidSignatureImplCopyWith<
          _$Bolt12ParseError_InvalidSignatureImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
mixin _$DecodeError {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $DecodeErrorCopyWith<$Res> {
  factory $DecodeErrorCopyWith(
          DecodeError value, $Res Function(DecodeError) then) =
      _$DecodeErrorCopyWithImpl<$Res, DecodeError>;
}

/// @nodoc
class _$DecodeErrorCopyWithImpl<$Res, $Val extends DecodeError>
    implements $DecodeErrorCopyWith<$Res> {
  _$DecodeErrorCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;
}

/// @nodoc
abstract class _$$DecodeError_UnknownVersionImplCopyWith<$Res> {
  factory _$$DecodeError_UnknownVersionImplCopyWith(
          _$DecodeError_UnknownVersionImpl value,
          $Res Function(_$DecodeError_UnknownVersionImpl) then) =
      __$$DecodeError_UnknownVersionImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_UnknownVersionImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res, _$DecodeError_UnknownVersionImpl>
    implements _$$DecodeError_UnknownVersionImplCopyWith<$Res> {
  __$$DecodeError_UnknownVersionImplCopyWithImpl(
      _$DecodeError_UnknownVersionImpl _value,
      $Res Function(_$DecodeError_UnknownVersionImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_UnknownVersionImpl extends DecodeError_UnknownVersion {
  const _$DecodeError_UnknownVersionImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.unknownVersion()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_UnknownVersionImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return unknownVersion();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return unknownVersion?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (unknownVersion != null) {
      return unknownVersion();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return unknownVersion(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return unknownVersion?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (unknownVersion != null) {
      return unknownVersion(this);
    }
    return orElse();
  }
}

abstract class DecodeError_UnknownVersion extends DecodeError {
  const factory DecodeError_UnknownVersion() = _$DecodeError_UnknownVersionImpl;
  const DecodeError_UnknownVersion._() : super._();
}

/// @nodoc
abstract class _$$DecodeError_UnknownRequiredFeatureImplCopyWith<$Res> {
  factory _$$DecodeError_UnknownRequiredFeatureImplCopyWith(
          _$DecodeError_UnknownRequiredFeatureImpl value,
          $Res Function(_$DecodeError_UnknownRequiredFeatureImpl) then) =
      __$$DecodeError_UnknownRequiredFeatureImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_UnknownRequiredFeatureImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res,
        _$DecodeError_UnknownRequiredFeatureImpl>
    implements _$$DecodeError_UnknownRequiredFeatureImplCopyWith<$Res> {
  __$$DecodeError_UnknownRequiredFeatureImplCopyWithImpl(
      _$DecodeError_UnknownRequiredFeatureImpl _value,
      $Res Function(_$DecodeError_UnknownRequiredFeatureImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_UnknownRequiredFeatureImpl
    extends DecodeError_UnknownRequiredFeature {
  const _$DecodeError_UnknownRequiredFeatureImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.unknownRequiredFeature()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_UnknownRequiredFeatureImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return unknownRequiredFeature();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return unknownRequiredFeature?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (unknownRequiredFeature != null) {
      return unknownRequiredFeature();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return unknownRequiredFeature(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return unknownRequiredFeature?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (unknownRequiredFeature != null) {
      return unknownRequiredFeature(this);
    }
    return orElse();
  }
}

abstract class DecodeError_UnknownRequiredFeature extends DecodeError {
  const factory DecodeError_UnknownRequiredFeature() =
      _$DecodeError_UnknownRequiredFeatureImpl;
  const DecodeError_UnknownRequiredFeature._() : super._();
}

/// @nodoc
abstract class _$$DecodeError_InvalidValueImplCopyWith<$Res> {
  factory _$$DecodeError_InvalidValueImplCopyWith(
          _$DecodeError_InvalidValueImpl value,
          $Res Function(_$DecodeError_InvalidValueImpl) then) =
      __$$DecodeError_InvalidValueImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_InvalidValueImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res, _$DecodeError_InvalidValueImpl>
    implements _$$DecodeError_InvalidValueImplCopyWith<$Res> {
  __$$DecodeError_InvalidValueImplCopyWithImpl(
      _$DecodeError_InvalidValueImpl _value,
      $Res Function(_$DecodeError_InvalidValueImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_InvalidValueImpl extends DecodeError_InvalidValue {
  const _$DecodeError_InvalidValueImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.invalidValue()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_InvalidValueImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return invalidValue();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return invalidValue?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (invalidValue != null) {
      return invalidValue();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return invalidValue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return invalidValue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (invalidValue != null) {
      return invalidValue(this);
    }
    return orElse();
  }
}

abstract class DecodeError_InvalidValue extends DecodeError {
  const factory DecodeError_InvalidValue() = _$DecodeError_InvalidValueImpl;
  const DecodeError_InvalidValue._() : super._();
}

/// @nodoc
abstract class _$$DecodeError_ShortReadImplCopyWith<$Res> {
  factory _$$DecodeError_ShortReadImplCopyWith(
          _$DecodeError_ShortReadImpl value,
          $Res Function(_$DecodeError_ShortReadImpl) then) =
      __$$DecodeError_ShortReadImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_ShortReadImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res, _$DecodeError_ShortReadImpl>
    implements _$$DecodeError_ShortReadImplCopyWith<$Res> {
  __$$DecodeError_ShortReadImplCopyWithImpl(_$DecodeError_ShortReadImpl _value,
      $Res Function(_$DecodeError_ShortReadImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_ShortReadImpl extends DecodeError_ShortRead {
  const _$DecodeError_ShortReadImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.shortRead()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_ShortReadImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return shortRead();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return shortRead?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (shortRead != null) {
      return shortRead();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return shortRead(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return shortRead?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (shortRead != null) {
      return shortRead(this);
    }
    return orElse();
  }
}

abstract class DecodeError_ShortRead extends DecodeError {
  const factory DecodeError_ShortRead() = _$DecodeError_ShortReadImpl;
  const DecodeError_ShortRead._() : super._();
}

/// @nodoc
abstract class _$$DecodeError_BadLengthDescriptorImplCopyWith<$Res> {
  factory _$$DecodeError_BadLengthDescriptorImplCopyWith(
          _$DecodeError_BadLengthDescriptorImpl value,
          $Res Function(_$DecodeError_BadLengthDescriptorImpl) then) =
      __$$DecodeError_BadLengthDescriptorImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_BadLengthDescriptorImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res,
        _$DecodeError_BadLengthDescriptorImpl>
    implements _$$DecodeError_BadLengthDescriptorImplCopyWith<$Res> {
  __$$DecodeError_BadLengthDescriptorImplCopyWithImpl(
      _$DecodeError_BadLengthDescriptorImpl _value,
      $Res Function(_$DecodeError_BadLengthDescriptorImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_BadLengthDescriptorImpl
    extends DecodeError_BadLengthDescriptor {
  const _$DecodeError_BadLengthDescriptorImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.badLengthDescriptor()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_BadLengthDescriptorImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return badLengthDescriptor();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return badLengthDescriptor?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (badLengthDescriptor != null) {
      return badLengthDescriptor();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return badLengthDescriptor(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return badLengthDescriptor?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (badLengthDescriptor != null) {
      return badLengthDescriptor(this);
    }
    return orElse();
  }
}

abstract class DecodeError_BadLengthDescriptor extends DecodeError {
  const factory DecodeError_BadLengthDescriptor() =
      _$DecodeError_BadLengthDescriptorImpl;
  const DecodeError_BadLengthDescriptor._() : super._();
}

/// @nodoc
abstract class _$$DecodeError_IoImplCopyWith<$Res> {
  factory _$$DecodeError_IoImplCopyWith(_$DecodeError_IoImpl value,
          $Res Function(_$DecodeError_IoImpl) then) =
      __$$DecodeError_IoImplCopyWithImpl<$Res>;
  @useResult
  $Res call({String field0});
}

/// @nodoc
class __$$DecodeError_IoImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res, _$DecodeError_IoImpl>
    implements _$$DecodeError_IoImplCopyWith<$Res> {
  __$$DecodeError_IoImplCopyWithImpl(
      _$DecodeError_IoImpl _value, $Res Function(_$DecodeError_IoImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$DecodeError_IoImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as String,
    ));
  }
}

/// @nodoc

class _$DecodeError_IoImpl extends DecodeError_Io {
  const _$DecodeError_IoImpl(this.field0) : super._();

  @override
  final String field0;

  @override
  String toString() {
    return 'DecodeError.io(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_IoImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$DecodeError_IoImplCopyWith<_$DecodeError_IoImpl> get copyWith =>
      __$$DecodeError_IoImplCopyWithImpl<_$DecodeError_IoImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return io(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return io?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (io != null) {
      return io(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return io(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return io?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (io != null) {
      return io(this);
    }
    return orElse();
  }
}

abstract class DecodeError_Io extends DecodeError {
  const factory DecodeError_Io(final String field0) = _$DecodeError_IoImpl;
  const DecodeError_Io._() : super._();

  String get field0;
  @JsonKey(ignore: true)
  _$$DecodeError_IoImplCopyWith<_$DecodeError_IoImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$DecodeError_UnsupportedCompressionImplCopyWith<$Res> {
  factory _$$DecodeError_UnsupportedCompressionImplCopyWith(
          _$DecodeError_UnsupportedCompressionImpl value,
          $Res Function(_$DecodeError_UnsupportedCompressionImpl) then) =
      __$$DecodeError_UnsupportedCompressionImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_UnsupportedCompressionImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res,
        _$DecodeError_UnsupportedCompressionImpl>
    implements _$$DecodeError_UnsupportedCompressionImplCopyWith<$Res> {
  __$$DecodeError_UnsupportedCompressionImplCopyWithImpl(
      _$DecodeError_UnsupportedCompressionImpl _value,
      $Res Function(_$DecodeError_UnsupportedCompressionImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_UnsupportedCompressionImpl
    extends DecodeError_UnsupportedCompression {
  const _$DecodeError_UnsupportedCompressionImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.unsupportedCompression()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_UnsupportedCompressionImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return unsupportedCompression();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return unsupportedCompression?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (unsupportedCompression != null) {
      return unsupportedCompression();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return unsupportedCompression(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return unsupportedCompression?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (unsupportedCompression != null) {
      return unsupportedCompression(this);
    }
    return orElse();
  }
}

abstract class DecodeError_UnsupportedCompression extends DecodeError {
  const factory DecodeError_UnsupportedCompression() =
      _$DecodeError_UnsupportedCompressionImpl;
  const DecodeError_UnsupportedCompression._() : super._();
}

/// @nodoc
abstract class _$$DecodeError_DangerousValueImplCopyWith<$Res> {
  factory _$$DecodeError_DangerousValueImplCopyWith(
          _$DecodeError_DangerousValueImpl value,
          $Res Function(_$DecodeError_DangerousValueImpl) then) =
      __$$DecodeError_DangerousValueImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$DecodeError_DangerousValueImplCopyWithImpl<$Res>
    extends _$DecodeErrorCopyWithImpl<$Res, _$DecodeError_DangerousValueImpl>
    implements _$$DecodeError_DangerousValueImplCopyWith<$Res> {
  __$$DecodeError_DangerousValueImplCopyWithImpl(
      _$DecodeError_DangerousValueImpl _value,
      $Res Function(_$DecodeError_DangerousValueImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$DecodeError_DangerousValueImpl extends DecodeError_DangerousValue {
  const _$DecodeError_DangerousValueImpl() : super._();

  @override
  String toString() {
    return 'DecodeError.dangerousValue()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$DecodeError_DangerousValueImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() unknownVersion,
    required TResult Function() unknownRequiredFeature,
    required TResult Function() invalidValue,
    required TResult Function() shortRead,
    required TResult Function() badLengthDescriptor,
    required TResult Function(String field0) io,
    required TResult Function() unsupportedCompression,
    required TResult Function() dangerousValue,
  }) {
    return dangerousValue();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? unknownVersion,
    TResult? Function()? unknownRequiredFeature,
    TResult? Function()? invalidValue,
    TResult? Function()? shortRead,
    TResult? Function()? badLengthDescriptor,
    TResult? Function(String field0)? io,
    TResult? Function()? unsupportedCompression,
    TResult? Function()? dangerousValue,
  }) {
    return dangerousValue?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? unknownVersion,
    TResult Function()? unknownRequiredFeature,
    TResult Function()? invalidValue,
    TResult Function()? shortRead,
    TResult Function()? badLengthDescriptor,
    TResult Function(String field0)? io,
    TResult Function()? unsupportedCompression,
    TResult Function()? dangerousValue,
    required TResult orElse(),
  }) {
    if (dangerousValue != null) {
      return dangerousValue();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(DecodeError_UnknownVersion value) unknownVersion,
    required TResult Function(DecodeError_UnknownRequiredFeature value)
        unknownRequiredFeature,
    required TResult Function(DecodeError_InvalidValue value) invalidValue,
    required TResult Function(DecodeError_ShortRead value) shortRead,
    required TResult Function(DecodeError_BadLengthDescriptor value)
        badLengthDescriptor,
    required TResult Function(DecodeError_Io value) io,
    required TResult Function(DecodeError_UnsupportedCompression value)
        unsupportedCompression,
    required TResult Function(DecodeError_DangerousValue value) dangerousValue,
  }) {
    return dangerousValue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult? Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult? Function(DecodeError_InvalidValue value)? invalidValue,
    TResult? Function(DecodeError_ShortRead value)? shortRead,
    TResult? Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult? Function(DecodeError_Io value)? io,
    TResult? Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult? Function(DecodeError_DangerousValue value)? dangerousValue,
  }) {
    return dangerousValue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(DecodeError_UnknownVersion value)? unknownVersion,
    TResult Function(DecodeError_UnknownRequiredFeature value)?
        unknownRequiredFeature,
    TResult Function(DecodeError_InvalidValue value)? invalidValue,
    TResult Function(DecodeError_ShortRead value)? shortRead,
    TResult Function(DecodeError_BadLengthDescriptor value)?
        badLengthDescriptor,
    TResult Function(DecodeError_Io value)? io,
    TResult Function(DecodeError_UnsupportedCompression value)?
        unsupportedCompression,
    TResult Function(DecodeError_DangerousValue value)? dangerousValue,
    required TResult orElse(),
  }) {
    if (dangerousValue != null) {
      return dangerousValue(this);
    }
    return orElse();
  }
}

abstract class DecodeError_DangerousValue extends DecodeError {
  const factory DecodeError_DangerousValue() = _$DecodeError_DangerousValueImpl;
  const DecodeError_DangerousValue._() : super._();
}

/// @nodoc
mixin _$FfiNodeError {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $FfiNodeErrorCopyWith<$Res> {
  factory $FfiNodeErrorCopyWith(
          FfiNodeError value, $Res Function(FfiNodeError) then) =
      _$FfiNodeErrorCopyWithImpl<$Res, FfiNodeError>;
}

/// @nodoc
class _$FfiNodeErrorCopyWithImpl<$Res, $Val extends FfiNodeError>
    implements $FfiNodeErrorCopyWith<$Res> {
  _$FfiNodeErrorCopyWithImpl(this._value, this._then);

  // ignore: unused_field
  final $Val _value;
  // ignore: unused_field
  final $Res Function($Val) _then;
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidTxidImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidTxidImplCopyWith(
          _$FfiNodeError_InvalidTxidImpl value,
          $Res Function(_$FfiNodeError_InvalidTxidImpl) then) =
      __$$FfiNodeError_InvalidTxidImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidTxidImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_InvalidTxidImpl>
    implements _$$FfiNodeError_InvalidTxidImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidTxidImplCopyWithImpl(
      _$FfiNodeError_InvalidTxidImpl _value,
      $Res Function(_$FfiNodeError_InvalidTxidImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidTxidImpl extends FfiNodeError_InvalidTxid {
  const _$FfiNodeError_InvalidTxidImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidTxid()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidTxidImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidTxid();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidTxid?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidTxid != null) {
      return invalidTxid();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidTxid(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidTxid?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidTxid != null) {
      return invalidTxid(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidTxid extends FfiNodeError {
  const factory FfiNodeError_InvalidTxid() = _$FfiNodeError_InvalidTxidImpl;
  const FfiNodeError_InvalidTxid._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_AlreadyRunningImplCopyWith<$Res> {
  factory _$$FfiNodeError_AlreadyRunningImplCopyWith(
          _$FfiNodeError_AlreadyRunningImpl value,
          $Res Function(_$FfiNodeError_AlreadyRunningImpl) then) =
      __$$FfiNodeError_AlreadyRunningImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_AlreadyRunningImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_AlreadyRunningImpl>
    implements _$$FfiNodeError_AlreadyRunningImplCopyWith<$Res> {
  __$$FfiNodeError_AlreadyRunningImplCopyWithImpl(
      _$FfiNodeError_AlreadyRunningImpl _value,
      $Res Function(_$FfiNodeError_AlreadyRunningImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_AlreadyRunningImpl extends FfiNodeError_AlreadyRunning {
  const _$FfiNodeError_AlreadyRunningImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.alreadyRunning()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_AlreadyRunningImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return alreadyRunning();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return alreadyRunning?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (alreadyRunning != null) {
      return alreadyRunning();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return alreadyRunning(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return alreadyRunning?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (alreadyRunning != null) {
      return alreadyRunning(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_AlreadyRunning extends FfiNodeError {
  const factory FfiNodeError_AlreadyRunning() =
      _$FfiNodeError_AlreadyRunningImpl;
  const FfiNodeError_AlreadyRunning._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_NotRunningImplCopyWith<$Res> {
  factory _$$FfiNodeError_NotRunningImplCopyWith(
          _$FfiNodeError_NotRunningImpl value,
          $Res Function(_$FfiNodeError_NotRunningImpl) then) =
      __$$FfiNodeError_NotRunningImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_NotRunningImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_NotRunningImpl>
    implements _$$FfiNodeError_NotRunningImplCopyWith<$Res> {
  __$$FfiNodeError_NotRunningImplCopyWithImpl(
      _$FfiNodeError_NotRunningImpl _value,
      $Res Function(_$FfiNodeError_NotRunningImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_NotRunningImpl extends FfiNodeError_NotRunning {
  const _$FfiNodeError_NotRunningImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.notRunning()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_NotRunningImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return notRunning();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return notRunning?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (notRunning != null) {
      return notRunning();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return notRunning(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return notRunning?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (notRunning != null) {
      return notRunning(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_NotRunning extends FfiNodeError {
  const factory FfiNodeError_NotRunning() = _$FfiNodeError_NotRunningImpl;
  const FfiNodeError_NotRunning._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_OnchainTxCreationFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_OnchainTxCreationFailedImplCopyWith(
          _$FfiNodeError_OnchainTxCreationFailedImpl value,
          $Res Function(_$FfiNodeError_OnchainTxCreationFailedImpl) then) =
      __$$FfiNodeError_OnchainTxCreationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_OnchainTxCreationFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_OnchainTxCreationFailedImpl>
    implements _$$FfiNodeError_OnchainTxCreationFailedImplCopyWith<$Res> {
  __$$FfiNodeError_OnchainTxCreationFailedImplCopyWithImpl(
      _$FfiNodeError_OnchainTxCreationFailedImpl _value,
      $Res Function(_$FfiNodeError_OnchainTxCreationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_OnchainTxCreationFailedImpl
    extends FfiNodeError_OnchainTxCreationFailed {
  const _$FfiNodeError_OnchainTxCreationFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.onchainTxCreationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_OnchainTxCreationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return onchainTxCreationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return onchainTxCreationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (onchainTxCreationFailed != null) {
      return onchainTxCreationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return onchainTxCreationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return onchainTxCreationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (onchainTxCreationFailed != null) {
      return onchainTxCreationFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_OnchainTxCreationFailed extends FfiNodeError {
  const factory FfiNodeError_OnchainTxCreationFailed() =
      _$FfiNodeError_OnchainTxCreationFailedImpl;
  const FfiNodeError_OnchainTxCreationFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_ConnectionFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_ConnectionFailedImplCopyWith(
          _$FfiNodeError_ConnectionFailedImpl value,
          $Res Function(_$FfiNodeError_ConnectionFailedImpl) then) =
      __$$FfiNodeError_ConnectionFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_ConnectionFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_ConnectionFailedImpl>
    implements _$$FfiNodeError_ConnectionFailedImplCopyWith<$Res> {
  __$$FfiNodeError_ConnectionFailedImplCopyWithImpl(
      _$FfiNodeError_ConnectionFailedImpl _value,
      $Res Function(_$FfiNodeError_ConnectionFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_ConnectionFailedImpl
    extends FfiNodeError_ConnectionFailed {
  const _$FfiNodeError_ConnectionFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.connectionFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_ConnectionFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return connectionFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return connectionFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (connectionFailed != null) {
      return connectionFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return connectionFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return connectionFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (connectionFailed != null) {
      return connectionFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_ConnectionFailed extends FfiNodeError {
  const factory FfiNodeError_ConnectionFailed() =
      _$FfiNodeError_ConnectionFailedImpl;
  const FfiNodeError_ConnectionFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvoiceCreationFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvoiceCreationFailedImplCopyWith(
          _$FfiNodeError_InvoiceCreationFailedImpl value,
          $Res Function(_$FfiNodeError_InvoiceCreationFailedImpl) then) =
      __$$FfiNodeError_InvoiceCreationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvoiceCreationFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_InvoiceCreationFailedImpl>
    implements _$$FfiNodeError_InvoiceCreationFailedImplCopyWith<$Res> {
  __$$FfiNodeError_InvoiceCreationFailedImplCopyWithImpl(
      _$FfiNodeError_InvoiceCreationFailedImpl _value,
      $Res Function(_$FfiNodeError_InvoiceCreationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvoiceCreationFailedImpl
    extends FfiNodeError_InvoiceCreationFailed {
  const _$FfiNodeError_InvoiceCreationFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invoiceCreationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvoiceCreationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invoiceCreationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invoiceCreationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invoiceCreationFailed != null) {
      return invoiceCreationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invoiceCreationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invoiceCreationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invoiceCreationFailed != null) {
      return invoiceCreationFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvoiceCreationFailed extends FfiNodeError {
  const factory FfiNodeError_InvoiceCreationFailed() =
      _$FfiNodeError_InvoiceCreationFailedImpl;
  const FfiNodeError_InvoiceCreationFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_PaymentSendingFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_PaymentSendingFailedImplCopyWith(
          _$FfiNodeError_PaymentSendingFailedImpl value,
          $Res Function(_$FfiNodeError_PaymentSendingFailedImpl) then) =
      __$$FfiNodeError_PaymentSendingFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_PaymentSendingFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_PaymentSendingFailedImpl>
    implements _$$FfiNodeError_PaymentSendingFailedImplCopyWith<$Res> {
  __$$FfiNodeError_PaymentSendingFailedImplCopyWithImpl(
      _$FfiNodeError_PaymentSendingFailedImpl _value,
      $Res Function(_$FfiNodeError_PaymentSendingFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_PaymentSendingFailedImpl
    extends FfiNodeError_PaymentSendingFailed {
  const _$FfiNodeError_PaymentSendingFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.paymentSendingFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_PaymentSendingFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return paymentSendingFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return paymentSendingFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (paymentSendingFailed != null) {
      return paymentSendingFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return paymentSendingFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return paymentSendingFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (paymentSendingFailed != null) {
      return paymentSendingFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_PaymentSendingFailed extends FfiNodeError {
  const factory FfiNodeError_PaymentSendingFailed() =
      _$FfiNodeError_PaymentSendingFailedImpl;
  const FfiNodeError_PaymentSendingFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_ProbeSendingFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_ProbeSendingFailedImplCopyWith(
          _$FfiNodeError_ProbeSendingFailedImpl value,
          $Res Function(_$FfiNodeError_ProbeSendingFailedImpl) then) =
      __$$FfiNodeError_ProbeSendingFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_ProbeSendingFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_ProbeSendingFailedImpl>
    implements _$$FfiNodeError_ProbeSendingFailedImplCopyWith<$Res> {
  __$$FfiNodeError_ProbeSendingFailedImplCopyWithImpl(
      _$FfiNodeError_ProbeSendingFailedImpl _value,
      $Res Function(_$FfiNodeError_ProbeSendingFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_ProbeSendingFailedImpl
    extends FfiNodeError_ProbeSendingFailed {
  const _$FfiNodeError_ProbeSendingFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.probeSendingFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_ProbeSendingFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return probeSendingFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return probeSendingFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (probeSendingFailed != null) {
      return probeSendingFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return probeSendingFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return probeSendingFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (probeSendingFailed != null) {
      return probeSendingFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_ProbeSendingFailed extends FfiNodeError {
  const factory FfiNodeError_ProbeSendingFailed() =
      _$FfiNodeError_ProbeSendingFailedImpl;
  const FfiNodeError_ProbeSendingFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_ChannelCreationFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_ChannelCreationFailedImplCopyWith(
          _$FfiNodeError_ChannelCreationFailedImpl value,
          $Res Function(_$FfiNodeError_ChannelCreationFailedImpl) then) =
      __$$FfiNodeError_ChannelCreationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_ChannelCreationFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_ChannelCreationFailedImpl>
    implements _$$FfiNodeError_ChannelCreationFailedImplCopyWith<$Res> {
  __$$FfiNodeError_ChannelCreationFailedImplCopyWithImpl(
      _$FfiNodeError_ChannelCreationFailedImpl _value,
      $Res Function(_$FfiNodeError_ChannelCreationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_ChannelCreationFailedImpl
    extends FfiNodeError_ChannelCreationFailed {
  const _$FfiNodeError_ChannelCreationFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.channelCreationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_ChannelCreationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return channelCreationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return channelCreationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (channelCreationFailed != null) {
      return channelCreationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return channelCreationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return channelCreationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (channelCreationFailed != null) {
      return channelCreationFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_ChannelCreationFailed extends FfiNodeError {
  const factory FfiNodeError_ChannelCreationFailed() =
      _$FfiNodeError_ChannelCreationFailedImpl;
  const FfiNodeError_ChannelCreationFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_ChannelClosingFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_ChannelClosingFailedImplCopyWith(
          _$FfiNodeError_ChannelClosingFailedImpl value,
          $Res Function(_$FfiNodeError_ChannelClosingFailedImpl) then) =
      __$$FfiNodeError_ChannelClosingFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_ChannelClosingFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_ChannelClosingFailedImpl>
    implements _$$FfiNodeError_ChannelClosingFailedImplCopyWith<$Res> {
  __$$FfiNodeError_ChannelClosingFailedImplCopyWithImpl(
      _$FfiNodeError_ChannelClosingFailedImpl _value,
      $Res Function(_$FfiNodeError_ChannelClosingFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_ChannelClosingFailedImpl
    extends FfiNodeError_ChannelClosingFailed {
  const _$FfiNodeError_ChannelClosingFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.channelClosingFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_ChannelClosingFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return channelClosingFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return channelClosingFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (channelClosingFailed != null) {
      return channelClosingFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return channelClosingFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return channelClosingFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (channelClosingFailed != null) {
      return channelClosingFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_ChannelClosingFailed extends FfiNodeError {
  const factory FfiNodeError_ChannelClosingFailed() =
      _$FfiNodeError_ChannelClosingFailedImpl;
  const FfiNodeError_ChannelClosingFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_ChannelConfigUpdateFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_ChannelConfigUpdateFailedImplCopyWith(
          _$FfiNodeError_ChannelConfigUpdateFailedImpl value,
          $Res Function(_$FfiNodeError_ChannelConfigUpdateFailedImpl) then) =
      __$$FfiNodeError_ChannelConfigUpdateFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_ChannelConfigUpdateFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_ChannelConfigUpdateFailedImpl>
    implements _$$FfiNodeError_ChannelConfigUpdateFailedImplCopyWith<$Res> {
  __$$FfiNodeError_ChannelConfigUpdateFailedImplCopyWithImpl(
      _$FfiNodeError_ChannelConfigUpdateFailedImpl _value,
      $Res Function(_$FfiNodeError_ChannelConfigUpdateFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_ChannelConfigUpdateFailedImpl
    extends FfiNodeError_ChannelConfigUpdateFailed {
  const _$FfiNodeError_ChannelConfigUpdateFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.channelConfigUpdateFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_ChannelConfigUpdateFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return channelConfigUpdateFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return channelConfigUpdateFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (channelConfigUpdateFailed != null) {
      return channelConfigUpdateFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return channelConfigUpdateFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return channelConfigUpdateFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (channelConfigUpdateFailed != null) {
      return channelConfigUpdateFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_ChannelConfigUpdateFailed extends FfiNodeError {
  const factory FfiNodeError_ChannelConfigUpdateFailed() =
      _$FfiNodeError_ChannelConfigUpdateFailedImpl;
  const FfiNodeError_ChannelConfigUpdateFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_PersistenceFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_PersistenceFailedImplCopyWith(
          _$FfiNodeError_PersistenceFailedImpl value,
          $Res Function(_$FfiNodeError_PersistenceFailedImpl) then) =
      __$$FfiNodeError_PersistenceFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_PersistenceFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_PersistenceFailedImpl>
    implements _$$FfiNodeError_PersistenceFailedImplCopyWith<$Res> {
  __$$FfiNodeError_PersistenceFailedImplCopyWithImpl(
      _$FfiNodeError_PersistenceFailedImpl _value,
      $Res Function(_$FfiNodeError_PersistenceFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_PersistenceFailedImpl
    extends FfiNodeError_PersistenceFailed {
  const _$FfiNodeError_PersistenceFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.persistenceFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_PersistenceFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return persistenceFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return persistenceFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (persistenceFailed != null) {
      return persistenceFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return persistenceFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return persistenceFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (persistenceFailed != null) {
      return persistenceFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_PersistenceFailed extends FfiNodeError {
  const factory FfiNodeError_PersistenceFailed() =
      _$FfiNodeError_PersistenceFailedImpl;
  const FfiNodeError_PersistenceFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_WalletOperationFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_WalletOperationFailedImplCopyWith(
          _$FfiNodeError_WalletOperationFailedImpl value,
          $Res Function(_$FfiNodeError_WalletOperationFailedImpl) then) =
      __$$FfiNodeError_WalletOperationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_WalletOperationFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_WalletOperationFailedImpl>
    implements _$$FfiNodeError_WalletOperationFailedImplCopyWith<$Res> {
  __$$FfiNodeError_WalletOperationFailedImplCopyWithImpl(
      _$FfiNodeError_WalletOperationFailedImpl _value,
      $Res Function(_$FfiNodeError_WalletOperationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_WalletOperationFailedImpl
    extends FfiNodeError_WalletOperationFailed {
  const _$FfiNodeError_WalletOperationFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.walletOperationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_WalletOperationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return walletOperationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return walletOperationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (walletOperationFailed != null) {
      return walletOperationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return walletOperationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return walletOperationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (walletOperationFailed != null) {
      return walletOperationFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_WalletOperationFailed extends FfiNodeError {
  const factory FfiNodeError_WalletOperationFailed() =
      _$FfiNodeError_WalletOperationFailedImpl;
  const FfiNodeError_WalletOperationFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_OnchainTxSigningFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_OnchainTxSigningFailedImplCopyWith(
          _$FfiNodeError_OnchainTxSigningFailedImpl value,
          $Res Function(_$FfiNodeError_OnchainTxSigningFailedImpl) then) =
      __$$FfiNodeError_OnchainTxSigningFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_OnchainTxSigningFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_OnchainTxSigningFailedImpl>
    implements _$$FfiNodeError_OnchainTxSigningFailedImplCopyWith<$Res> {
  __$$FfiNodeError_OnchainTxSigningFailedImplCopyWithImpl(
      _$FfiNodeError_OnchainTxSigningFailedImpl _value,
      $Res Function(_$FfiNodeError_OnchainTxSigningFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_OnchainTxSigningFailedImpl
    extends FfiNodeError_OnchainTxSigningFailed {
  const _$FfiNodeError_OnchainTxSigningFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.onchainTxSigningFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_OnchainTxSigningFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return onchainTxSigningFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return onchainTxSigningFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (onchainTxSigningFailed != null) {
      return onchainTxSigningFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return onchainTxSigningFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return onchainTxSigningFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (onchainTxSigningFailed != null) {
      return onchainTxSigningFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_OnchainTxSigningFailed extends FfiNodeError {
  const factory FfiNodeError_OnchainTxSigningFailed() =
      _$FfiNodeError_OnchainTxSigningFailedImpl;
  const FfiNodeError_OnchainTxSigningFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_MessageSigningFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_MessageSigningFailedImplCopyWith(
          _$FfiNodeError_MessageSigningFailedImpl value,
          $Res Function(_$FfiNodeError_MessageSigningFailedImpl) then) =
      __$$FfiNodeError_MessageSigningFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_MessageSigningFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_MessageSigningFailedImpl>
    implements _$$FfiNodeError_MessageSigningFailedImplCopyWith<$Res> {
  __$$FfiNodeError_MessageSigningFailedImplCopyWithImpl(
      _$FfiNodeError_MessageSigningFailedImpl _value,
      $Res Function(_$FfiNodeError_MessageSigningFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_MessageSigningFailedImpl
    extends FfiNodeError_MessageSigningFailed {
  const _$FfiNodeError_MessageSigningFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.messageSigningFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_MessageSigningFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return messageSigningFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return messageSigningFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (messageSigningFailed != null) {
      return messageSigningFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return messageSigningFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return messageSigningFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (messageSigningFailed != null) {
      return messageSigningFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_MessageSigningFailed extends FfiNodeError {
  const factory FfiNodeError_MessageSigningFailed() =
      _$FfiNodeError_MessageSigningFailedImpl;
  const FfiNodeError_MessageSigningFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_TxSyncFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_TxSyncFailedImplCopyWith(
          _$FfiNodeError_TxSyncFailedImpl value,
          $Res Function(_$FfiNodeError_TxSyncFailedImpl) then) =
      __$$FfiNodeError_TxSyncFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_TxSyncFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_TxSyncFailedImpl>
    implements _$$FfiNodeError_TxSyncFailedImplCopyWith<$Res> {
  __$$FfiNodeError_TxSyncFailedImplCopyWithImpl(
      _$FfiNodeError_TxSyncFailedImpl _value,
      $Res Function(_$FfiNodeError_TxSyncFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_TxSyncFailedImpl extends FfiNodeError_TxSyncFailed {
  const _$FfiNodeError_TxSyncFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.txSyncFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_TxSyncFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return txSyncFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return txSyncFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (txSyncFailed != null) {
      return txSyncFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return txSyncFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return txSyncFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (txSyncFailed != null) {
      return txSyncFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_TxSyncFailed extends FfiNodeError {
  const factory FfiNodeError_TxSyncFailed() = _$FfiNodeError_TxSyncFailedImpl;
  const FfiNodeError_TxSyncFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_GossipUpdateFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_GossipUpdateFailedImplCopyWith(
          _$FfiNodeError_GossipUpdateFailedImpl value,
          $Res Function(_$FfiNodeError_GossipUpdateFailedImpl) then) =
      __$$FfiNodeError_GossipUpdateFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_GossipUpdateFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_GossipUpdateFailedImpl>
    implements _$$FfiNodeError_GossipUpdateFailedImplCopyWith<$Res> {
  __$$FfiNodeError_GossipUpdateFailedImplCopyWithImpl(
      _$FfiNodeError_GossipUpdateFailedImpl _value,
      $Res Function(_$FfiNodeError_GossipUpdateFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_GossipUpdateFailedImpl
    extends FfiNodeError_GossipUpdateFailed {
  const _$FfiNodeError_GossipUpdateFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.gossipUpdateFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_GossipUpdateFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return gossipUpdateFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return gossipUpdateFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (gossipUpdateFailed != null) {
      return gossipUpdateFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return gossipUpdateFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return gossipUpdateFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (gossipUpdateFailed != null) {
      return gossipUpdateFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_GossipUpdateFailed extends FfiNodeError {
  const factory FfiNodeError_GossipUpdateFailed() =
      _$FfiNodeError_GossipUpdateFailedImpl;
  const FfiNodeError_GossipUpdateFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidAddressImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidAddressImplCopyWith(
          _$FfiNodeError_InvalidAddressImpl value,
          $Res Function(_$FfiNodeError_InvalidAddressImpl) then) =
      __$$FfiNodeError_InvalidAddressImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidAddressImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_InvalidAddressImpl>
    implements _$$FfiNodeError_InvalidAddressImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidAddressImplCopyWithImpl(
      _$FfiNodeError_InvalidAddressImpl _value,
      $Res Function(_$FfiNodeError_InvalidAddressImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidAddressImpl extends FfiNodeError_InvalidAddress {
  const _$FfiNodeError_InvalidAddressImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidAddress()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidAddressImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidAddress();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidAddress?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidAddress != null) {
      return invalidAddress();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidAddress(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidAddress?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidAddress != null) {
      return invalidAddress(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidAddress extends FfiNodeError {
  const factory FfiNodeError_InvalidAddress() =
      _$FfiNodeError_InvalidAddressImpl;
  const FfiNodeError_InvalidAddress._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidSocketAddressImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidSocketAddressImplCopyWith(
          _$FfiNodeError_InvalidSocketAddressImpl value,
          $Res Function(_$FfiNodeError_InvalidSocketAddressImpl) then) =
      __$$FfiNodeError_InvalidSocketAddressImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidSocketAddressImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_InvalidSocketAddressImpl>
    implements _$$FfiNodeError_InvalidSocketAddressImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidSocketAddressImplCopyWithImpl(
      _$FfiNodeError_InvalidSocketAddressImpl _value,
      $Res Function(_$FfiNodeError_InvalidSocketAddressImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidSocketAddressImpl
    extends FfiNodeError_InvalidSocketAddress {
  const _$FfiNodeError_InvalidSocketAddressImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidSocketAddress()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidSocketAddressImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidSocketAddress();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidSocketAddress?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidSocketAddress != null) {
      return invalidSocketAddress();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidSocketAddress(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidSocketAddress?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidSocketAddress != null) {
      return invalidSocketAddress(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidSocketAddress extends FfiNodeError {
  const factory FfiNodeError_InvalidSocketAddress() =
      _$FfiNodeError_InvalidSocketAddressImpl;
  const FfiNodeError_InvalidSocketAddress._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidPublicKeyImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidPublicKeyImplCopyWith(
          _$FfiNodeError_InvalidPublicKeyImpl value,
          $Res Function(_$FfiNodeError_InvalidPublicKeyImpl) then) =
      __$$FfiNodeError_InvalidPublicKeyImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidPublicKeyImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_InvalidPublicKeyImpl>
    implements _$$FfiNodeError_InvalidPublicKeyImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidPublicKeyImplCopyWithImpl(
      _$FfiNodeError_InvalidPublicKeyImpl _value,
      $Res Function(_$FfiNodeError_InvalidPublicKeyImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidPublicKeyImpl
    extends FfiNodeError_InvalidPublicKey {
  const _$FfiNodeError_InvalidPublicKeyImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidPublicKey()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidPublicKeyImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidPublicKey();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidPublicKey?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidPublicKey != null) {
      return invalidPublicKey();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidPublicKey(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidPublicKey?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidPublicKey != null) {
      return invalidPublicKey(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidPublicKey extends FfiNodeError {
  const factory FfiNodeError_InvalidPublicKey() =
      _$FfiNodeError_InvalidPublicKeyImpl;
  const FfiNodeError_InvalidPublicKey._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidSecretKeyImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidSecretKeyImplCopyWith(
          _$FfiNodeError_InvalidSecretKeyImpl value,
          $Res Function(_$FfiNodeError_InvalidSecretKeyImpl) then) =
      __$$FfiNodeError_InvalidSecretKeyImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidSecretKeyImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_InvalidSecretKeyImpl>
    implements _$$FfiNodeError_InvalidSecretKeyImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidSecretKeyImplCopyWithImpl(
      _$FfiNodeError_InvalidSecretKeyImpl _value,
      $Res Function(_$FfiNodeError_InvalidSecretKeyImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidSecretKeyImpl
    extends FfiNodeError_InvalidSecretKey {
  const _$FfiNodeError_InvalidSecretKeyImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidSecretKey()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidSecretKeyImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidSecretKey();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidSecretKey?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidSecretKey != null) {
      return invalidSecretKey();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidSecretKey(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidSecretKey?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidSecretKey != null) {
      return invalidSecretKey(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidSecretKey extends FfiNodeError {
  const factory FfiNodeError_InvalidSecretKey() =
      _$FfiNodeError_InvalidSecretKeyImpl;
  const FfiNodeError_InvalidSecretKey._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidPaymentHashImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidPaymentHashImplCopyWith(
          _$FfiNodeError_InvalidPaymentHashImpl value,
          $Res Function(_$FfiNodeError_InvalidPaymentHashImpl) then) =
      __$$FfiNodeError_InvalidPaymentHashImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidPaymentHashImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_InvalidPaymentHashImpl>
    implements _$$FfiNodeError_InvalidPaymentHashImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidPaymentHashImplCopyWithImpl(
      _$FfiNodeError_InvalidPaymentHashImpl _value,
      $Res Function(_$FfiNodeError_InvalidPaymentHashImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidPaymentHashImpl
    extends FfiNodeError_InvalidPaymentHash {
  const _$FfiNodeError_InvalidPaymentHashImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidPaymentHash()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidPaymentHashImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidPaymentHash();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidPaymentHash?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidPaymentHash != null) {
      return invalidPaymentHash();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidPaymentHash(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidPaymentHash?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidPaymentHash != null) {
      return invalidPaymentHash(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidPaymentHash extends FfiNodeError {
  const factory FfiNodeError_InvalidPaymentHash() =
      _$FfiNodeError_InvalidPaymentHashImpl;
  const FfiNodeError_InvalidPaymentHash._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidPaymentPreimageImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidPaymentPreimageImplCopyWith(
          _$FfiNodeError_InvalidPaymentPreimageImpl value,
          $Res Function(_$FfiNodeError_InvalidPaymentPreimageImpl) then) =
      __$$FfiNodeError_InvalidPaymentPreimageImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidPaymentPreimageImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_InvalidPaymentPreimageImpl>
    implements _$$FfiNodeError_InvalidPaymentPreimageImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidPaymentPreimageImplCopyWithImpl(
      _$FfiNodeError_InvalidPaymentPreimageImpl _value,
      $Res Function(_$FfiNodeError_InvalidPaymentPreimageImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidPaymentPreimageImpl
    extends FfiNodeError_InvalidPaymentPreimage {
  const _$FfiNodeError_InvalidPaymentPreimageImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidPaymentPreimage()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidPaymentPreimageImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidPaymentPreimage();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidPaymentPreimage?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidPaymentPreimage != null) {
      return invalidPaymentPreimage();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidPaymentPreimage(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidPaymentPreimage?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidPaymentPreimage != null) {
      return invalidPaymentPreimage(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidPaymentPreimage extends FfiNodeError {
  const factory FfiNodeError_InvalidPaymentPreimage() =
      _$FfiNodeError_InvalidPaymentPreimageImpl;
  const FfiNodeError_InvalidPaymentPreimage._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidPaymentSecretImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidPaymentSecretImplCopyWith(
          _$FfiNodeError_InvalidPaymentSecretImpl value,
          $Res Function(_$FfiNodeError_InvalidPaymentSecretImpl) then) =
      __$$FfiNodeError_InvalidPaymentSecretImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidPaymentSecretImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_InvalidPaymentSecretImpl>
    implements _$$FfiNodeError_InvalidPaymentSecretImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidPaymentSecretImplCopyWithImpl(
      _$FfiNodeError_InvalidPaymentSecretImpl _value,
      $Res Function(_$FfiNodeError_InvalidPaymentSecretImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidPaymentSecretImpl
    extends FfiNodeError_InvalidPaymentSecret {
  const _$FfiNodeError_InvalidPaymentSecretImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidPaymentSecret()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidPaymentSecretImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidPaymentSecret();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidPaymentSecret?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidPaymentSecret != null) {
      return invalidPaymentSecret();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidPaymentSecret(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidPaymentSecret?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidPaymentSecret != null) {
      return invalidPaymentSecret(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidPaymentSecret extends FfiNodeError {
  const factory FfiNodeError_InvalidPaymentSecret() =
      _$FfiNodeError_InvalidPaymentSecretImpl;
  const FfiNodeError_InvalidPaymentSecret._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidAmountImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidAmountImplCopyWith(
          _$FfiNodeError_InvalidAmountImpl value,
          $Res Function(_$FfiNodeError_InvalidAmountImpl) then) =
      __$$FfiNodeError_InvalidAmountImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidAmountImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_InvalidAmountImpl>
    implements _$$FfiNodeError_InvalidAmountImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidAmountImplCopyWithImpl(
      _$FfiNodeError_InvalidAmountImpl _value,
      $Res Function(_$FfiNodeError_InvalidAmountImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidAmountImpl extends FfiNodeError_InvalidAmount {
  const _$FfiNodeError_InvalidAmountImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidAmount()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidAmountImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidAmount();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidAmount?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidAmount != null) {
      return invalidAmount();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidAmount(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidAmount?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidAmount != null) {
      return invalidAmount(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidAmount extends FfiNodeError {
  const factory FfiNodeError_InvalidAmount() = _$FfiNodeError_InvalidAmountImpl;
  const FfiNodeError_InvalidAmount._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidInvoiceImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidInvoiceImplCopyWith(
          _$FfiNodeError_InvalidInvoiceImpl value,
          $Res Function(_$FfiNodeError_InvalidInvoiceImpl) then) =
      __$$FfiNodeError_InvalidInvoiceImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidInvoiceImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_InvalidInvoiceImpl>
    implements _$$FfiNodeError_InvalidInvoiceImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidInvoiceImplCopyWithImpl(
      _$FfiNodeError_InvalidInvoiceImpl _value,
      $Res Function(_$FfiNodeError_InvalidInvoiceImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidInvoiceImpl extends FfiNodeError_InvalidInvoice {
  const _$FfiNodeError_InvalidInvoiceImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidInvoice()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidInvoiceImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidInvoice();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidInvoice?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidInvoice != null) {
      return invalidInvoice();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidInvoice(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidInvoice?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidInvoice != null) {
      return invalidInvoice(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidInvoice extends FfiNodeError {
  const factory FfiNodeError_InvalidInvoice() =
      _$FfiNodeError_InvalidInvoiceImpl;
  const FfiNodeError_InvalidInvoice._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidChannelIdImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidChannelIdImplCopyWith(
          _$FfiNodeError_InvalidChannelIdImpl value,
          $Res Function(_$FfiNodeError_InvalidChannelIdImpl) then) =
      __$$FfiNodeError_InvalidChannelIdImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidChannelIdImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_InvalidChannelIdImpl>
    implements _$$FfiNodeError_InvalidChannelIdImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidChannelIdImplCopyWithImpl(
      _$FfiNodeError_InvalidChannelIdImpl _value,
      $Res Function(_$FfiNodeError_InvalidChannelIdImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidChannelIdImpl
    extends FfiNodeError_InvalidChannelId {
  const _$FfiNodeError_InvalidChannelIdImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidChannelId()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidChannelIdImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidChannelId();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidChannelId?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidChannelId != null) {
      return invalidChannelId();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidChannelId(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidChannelId?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidChannelId != null) {
      return invalidChannelId(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidChannelId extends FfiNodeError {
  const factory FfiNodeError_InvalidChannelId() =
      _$FfiNodeError_InvalidChannelIdImpl;
  const FfiNodeError_InvalidChannelId._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidNetworkImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidNetworkImplCopyWith(
          _$FfiNodeError_InvalidNetworkImpl value,
          $Res Function(_$FfiNodeError_InvalidNetworkImpl) then) =
      __$$FfiNodeError_InvalidNetworkImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidNetworkImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_InvalidNetworkImpl>
    implements _$$FfiNodeError_InvalidNetworkImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidNetworkImplCopyWithImpl(
      _$FfiNodeError_InvalidNetworkImpl _value,
      $Res Function(_$FfiNodeError_InvalidNetworkImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidNetworkImpl extends FfiNodeError_InvalidNetwork {
  const _$FfiNodeError_InvalidNetworkImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidNetwork()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidNetworkImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidNetwork();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidNetwork?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidNetwork != null) {
      return invalidNetwork();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidNetwork(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidNetwork?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidNetwork != null) {
      return invalidNetwork(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidNetwork extends FfiNodeError {
  const factory FfiNodeError_InvalidNetwork() =
      _$FfiNodeError_InvalidNetworkImpl;
  const FfiNodeError_InvalidNetwork._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_DuplicatePaymentImplCopyWith<$Res> {
  factory _$$FfiNodeError_DuplicatePaymentImplCopyWith(
          _$FfiNodeError_DuplicatePaymentImpl value,
          $Res Function(_$FfiNodeError_DuplicatePaymentImpl) then) =
      __$$FfiNodeError_DuplicatePaymentImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_DuplicatePaymentImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_DuplicatePaymentImpl>
    implements _$$FfiNodeError_DuplicatePaymentImplCopyWith<$Res> {
  __$$FfiNodeError_DuplicatePaymentImplCopyWithImpl(
      _$FfiNodeError_DuplicatePaymentImpl _value,
      $Res Function(_$FfiNodeError_DuplicatePaymentImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_DuplicatePaymentImpl
    extends FfiNodeError_DuplicatePayment {
  const _$FfiNodeError_DuplicatePaymentImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.duplicatePayment()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_DuplicatePaymentImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return duplicatePayment();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return duplicatePayment?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (duplicatePayment != null) {
      return duplicatePayment();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return duplicatePayment(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return duplicatePayment?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (duplicatePayment != null) {
      return duplicatePayment(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_DuplicatePayment extends FfiNodeError {
  const factory FfiNodeError_DuplicatePayment() =
      _$FfiNodeError_DuplicatePaymentImpl;
  const FfiNodeError_DuplicatePayment._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InsufficientFundsImplCopyWith<$Res> {
  factory _$$FfiNodeError_InsufficientFundsImplCopyWith(
          _$FfiNodeError_InsufficientFundsImpl value,
          $Res Function(_$FfiNodeError_InsufficientFundsImpl) then) =
      __$$FfiNodeError_InsufficientFundsImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InsufficientFundsImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_InsufficientFundsImpl>
    implements _$$FfiNodeError_InsufficientFundsImplCopyWith<$Res> {
  __$$FfiNodeError_InsufficientFundsImplCopyWithImpl(
      _$FfiNodeError_InsufficientFundsImpl _value,
      $Res Function(_$FfiNodeError_InsufficientFundsImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InsufficientFundsImpl
    extends FfiNodeError_InsufficientFunds {
  const _$FfiNodeError_InsufficientFundsImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.insufficientFunds()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InsufficientFundsImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return insufficientFunds();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return insufficientFunds?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (insufficientFunds != null) {
      return insufficientFunds();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return insufficientFunds(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return insufficientFunds?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (insufficientFunds != null) {
      return insufficientFunds(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InsufficientFunds extends FfiNodeError {
  const factory FfiNodeError_InsufficientFunds() =
      _$FfiNodeError_InsufficientFundsImpl;
  const FfiNodeError_InsufficientFunds._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_FeerateEstimationUpdateFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_FeerateEstimationUpdateFailedImplCopyWith(
          _$FfiNodeError_FeerateEstimationUpdateFailedImpl value,
          $Res Function(_$FfiNodeError_FeerateEstimationUpdateFailedImpl)
              then) =
      __$$FfiNodeError_FeerateEstimationUpdateFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_FeerateEstimationUpdateFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_FeerateEstimationUpdateFailedImpl>
    implements _$$FfiNodeError_FeerateEstimationUpdateFailedImplCopyWith<$Res> {
  __$$FfiNodeError_FeerateEstimationUpdateFailedImplCopyWithImpl(
      _$FfiNodeError_FeerateEstimationUpdateFailedImpl _value,
      $Res Function(_$FfiNodeError_FeerateEstimationUpdateFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_FeerateEstimationUpdateFailedImpl
    extends FfiNodeError_FeerateEstimationUpdateFailed {
  const _$FfiNodeError_FeerateEstimationUpdateFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.feerateEstimationUpdateFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_FeerateEstimationUpdateFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return feerateEstimationUpdateFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return feerateEstimationUpdateFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (feerateEstimationUpdateFailed != null) {
      return feerateEstimationUpdateFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return feerateEstimationUpdateFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return feerateEstimationUpdateFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (feerateEstimationUpdateFailed != null) {
      return feerateEstimationUpdateFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_FeerateEstimationUpdateFailed extends FfiNodeError {
  const factory FfiNodeError_FeerateEstimationUpdateFailed() =
      _$FfiNodeError_FeerateEstimationUpdateFailedImpl;
  const FfiNodeError_FeerateEstimationUpdateFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_LiquidityRequestFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_LiquidityRequestFailedImplCopyWith(
          _$FfiNodeError_LiquidityRequestFailedImpl value,
          $Res Function(_$FfiNodeError_LiquidityRequestFailedImpl) then) =
      __$$FfiNodeError_LiquidityRequestFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_LiquidityRequestFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_LiquidityRequestFailedImpl>
    implements _$$FfiNodeError_LiquidityRequestFailedImplCopyWith<$Res> {
  __$$FfiNodeError_LiquidityRequestFailedImplCopyWithImpl(
      _$FfiNodeError_LiquidityRequestFailedImpl _value,
      $Res Function(_$FfiNodeError_LiquidityRequestFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_LiquidityRequestFailedImpl
    extends FfiNodeError_LiquidityRequestFailed {
  const _$FfiNodeError_LiquidityRequestFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.liquidityRequestFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_LiquidityRequestFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return liquidityRequestFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return liquidityRequestFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (liquidityRequestFailed != null) {
      return liquidityRequestFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return liquidityRequestFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return liquidityRequestFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (liquidityRequestFailed != null) {
      return liquidityRequestFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_LiquidityRequestFailed extends FfiNodeError {
  const factory FfiNodeError_LiquidityRequestFailed() =
      _$FfiNodeError_LiquidityRequestFailedImpl;
  const FfiNodeError_LiquidityRequestFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_LiquiditySourceUnavailableImplCopyWith<$Res> {
  factory _$$FfiNodeError_LiquiditySourceUnavailableImplCopyWith(
          _$FfiNodeError_LiquiditySourceUnavailableImpl value,
          $Res Function(_$FfiNodeError_LiquiditySourceUnavailableImpl) then) =
      __$$FfiNodeError_LiquiditySourceUnavailableImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_LiquiditySourceUnavailableImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_LiquiditySourceUnavailableImpl>
    implements _$$FfiNodeError_LiquiditySourceUnavailableImplCopyWith<$Res> {
  __$$FfiNodeError_LiquiditySourceUnavailableImplCopyWithImpl(
      _$FfiNodeError_LiquiditySourceUnavailableImpl _value,
      $Res Function(_$FfiNodeError_LiquiditySourceUnavailableImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_LiquiditySourceUnavailableImpl
    extends FfiNodeError_LiquiditySourceUnavailable {
  const _$FfiNodeError_LiquiditySourceUnavailableImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.liquiditySourceUnavailable()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_LiquiditySourceUnavailableImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return liquiditySourceUnavailable();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return liquiditySourceUnavailable?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (liquiditySourceUnavailable != null) {
      return liquiditySourceUnavailable();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return liquiditySourceUnavailable(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return liquiditySourceUnavailable?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (liquiditySourceUnavailable != null) {
      return liquiditySourceUnavailable(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_LiquiditySourceUnavailable extends FfiNodeError {
  const factory FfiNodeError_LiquiditySourceUnavailable() =
      _$FfiNodeError_LiquiditySourceUnavailableImpl;
  const FfiNodeError_LiquiditySourceUnavailable._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_LiquidityFeeTooHighImplCopyWith<$Res> {
  factory _$$FfiNodeError_LiquidityFeeTooHighImplCopyWith(
          _$FfiNodeError_LiquidityFeeTooHighImpl value,
          $Res Function(_$FfiNodeError_LiquidityFeeTooHighImpl) then) =
      __$$FfiNodeError_LiquidityFeeTooHighImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_LiquidityFeeTooHighImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_LiquidityFeeTooHighImpl>
    implements _$$FfiNodeError_LiquidityFeeTooHighImplCopyWith<$Res> {
  __$$FfiNodeError_LiquidityFeeTooHighImplCopyWithImpl(
      _$FfiNodeError_LiquidityFeeTooHighImpl _value,
      $Res Function(_$FfiNodeError_LiquidityFeeTooHighImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_LiquidityFeeTooHighImpl
    extends FfiNodeError_LiquidityFeeTooHigh {
  const _$FfiNodeError_LiquidityFeeTooHighImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.liquidityFeeTooHigh()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_LiquidityFeeTooHighImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return liquidityFeeTooHigh();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return liquidityFeeTooHigh?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (liquidityFeeTooHigh != null) {
      return liquidityFeeTooHigh();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return liquidityFeeTooHigh(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return liquidityFeeTooHigh?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (liquidityFeeTooHigh != null) {
      return liquidityFeeTooHigh(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_LiquidityFeeTooHigh extends FfiNodeError {
  const factory FfiNodeError_LiquidityFeeTooHigh() =
      _$FfiNodeError_LiquidityFeeTooHighImpl;
  const FfiNodeError_LiquidityFeeTooHigh._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidPaymentIdImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidPaymentIdImplCopyWith(
          _$FfiNodeError_InvalidPaymentIdImpl value,
          $Res Function(_$FfiNodeError_InvalidPaymentIdImpl) then) =
      __$$FfiNodeError_InvalidPaymentIdImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidPaymentIdImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_InvalidPaymentIdImpl>
    implements _$$FfiNodeError_InvalidPaymentIdImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidPaymentIdImplCopyWithImpl(
      _$FfiNodeError_InvalidPaymentIdImpl _value,
      $Res Function(_$FfiNodeError_InvalidPaymentIdImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidPaymentIdImpl
    extends FfiNodeError_InvalidPaymentId {
  const _$FfiNodeError_InvalidPaymentIdImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidPaymentId()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidPaymentIdImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidPaymentId();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidPaymentId?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidPaymentId != null) {
      return invalidPaymentId();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidPaymentId(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidPaymentId?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidPaymentId != null) {
      return invalidPaymentId(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidPaymentId extends FfiNodeError {
  const factory FfiNodeError_InvalidPaymentId() =
      _$FfiNodeError_InvalidPaymentIdImpl;
  const FfiNodeError_InvalidPaymentId._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_DecodeImplCopyWith<$Res> {
  factory _$$FfiNodeError_DecodeImplCopyWith(_$FfiNodeError_DecodeImpl value,
          $Res Function(_$FfiNodeError_DecodeImpl) then) =
      __$$FfiNodeError_DecodeImplCopyWithImpl<$Res>;
  @useResult
  $Res call({DecodeError field0});

  $DecodeErrorCopyWith<$Res> get field0;
}

/// @nodoc
class __$$FfiNodeError_DecodeImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_DecodeImpl>
    implements _$$FfiNodeError_DecodeImplCopyWith<$Res> {
  __$$FfiNodeError_DecodeImplCopyWithImpl(_$FfiNodeError_DecodeImpl _value,
      $Res Function(_$FfiNodeError_DecodeImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$FfiNodeError_DecodeImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as DecodeError,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $DecodeErrorCopyWith<$Res> get field0 {
    return $DecodeErrorCopyWith<$Res>(_value.field0, (value) {
      return _then(_value.copyWith(field0: value));
    });
  }
}

/// @nodoc

class _$FfiNodeError_DecodeImpl extends FfiNodeError_Decode {
  const _$FfiNodeError_DecodeImpl(this.field0) : super._();

  @override
  final DecodeError field0;

  @override
  String toString() {
    return 'FfiNodeError.decode(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_DecodeImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$FfiNodeError_DecodeImplCopyWith<_$FfiNodeError_DecodeImpl> get copyWith =>
      __$$FfiNodeError_DecodeImplCopyWithImpl<_$FfiNodeError_DecodeImpl>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return decode(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return decode?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (decode != null) {
      return decode(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return decode(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return decode?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (decode != null) {
      return decode(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_Decode extends FfiNodeError {
  const factory FfiNodeError_Decode(final DecodeError field0) =
      _$FfiNodeError_DecodeImpl;
  const FfiNodeError_Decode._() : super._();

  DecodeError get field0;
  @JsonKey(ignore: true)
  _$$FfiNodeError_DecodeImplCopyWith<_$FfiNodeError_DecodeImpl> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$FfiNodeError_Bolt12ParseImplCopyWith<$Res> {
  factory _$$FfiNodeError_Bolt12ParseImplCopyWith(
          _$FfiNodeError_Bolt12ParseImpl value,
          $Res Function(_$FfiNodeError_Bolt12ParseImpl) then) =
      __$$FfiNodeError_Bolt12ParseImplCopyWithImpl<$Res>;
  @useResult
  $Res call({Bolt12ParseError field0});

  $Bolt12ParseErrorCopyWith<$Res> get field0;
}

/// @nodoc
class __$$FfiNodeError_Bolt12ParseImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_Bolt12ParseImpl>
    implements _$$FfiNodeError_Bolt12ParseImplCopyWith<$Res> {
  __$$FfiNodeError_Bolt12ParseImplCopyWithImpl(
      _$FfiNodeError_Bolt12ParseImpl _value,
      $Res Function(_$FfiNodeError_Bolt12ParseImpl) _then)
      : super(_value, _then);

  @pragma('vm:prefer-inline')
  @override
  $Res call({
    Object? field0 = null,
  }) {
    return _then(_$FfiNodeError_Bolt12ParseImpl(
      null == field0
          ? _value.field0
          : field0 // ignore: cast_nullable_to_non_nullable
              as Bolt12ParseError,
    ));
  }

  @override
  @pragma('vm:prefer-inline')
  $Bolt12ParseErrorCopyWith<$Res> get field0 {
    return $Bolt12ParseErrorCopyWith<$Res>(_value.field0, (value) {
      return _then(_value.copyWith(field0: value));
    });
  }
}

/// @nodoc

class _$FfiNodeError_Bolt12ParseImpl extends FfiNodeError_Bolt12Parse {
  const _$FfiNodeError_Bolt12ParseImpl(this.field0) : super._();

  @override
  final Bolt12ParseError field0;

  @override
  String toString() {
    return 'FfiNodeError.bolt12Parse(field0: $field0)';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_Bolt12ParseImpl &&
            (identical(other.field0, field0) || other.field0 == field0));
  }

  @override
  int get hashCode => Object.hash(runtimeType, field0);

  @JsonKey(ignore: true)
  @override
  @pragma('vm:prefer-inline')
  _$$FfiNodeError_Bolt12ParseImplCopyWith<_$FfiNodeError_Bolt12ParseImpl>
      get copyWith => __$$FfiNodeError_Bolt12ParseImplCopyWithImpl<
          _$FfiNodeError_Bolt12ParseImpl>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return bolt12Parse(field0);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return bolt12Parse?.call(field0);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (bolt12Parse != null) {
      return bolt12Parse(field0);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return bolt12Parse(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return bolt12Parse?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (bolt12Parse != null) {
      return bolt12Parse(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_Bolt12Parse extends FfiNodeError {
  const factory FfiNodeError_Bolt12Parse(final Bolt12ParseError field0) =
      _$FfiNodeError_Bolt12ParseImpl;
  const FfiNodeError_Bolt12Parse._() : super._();

  Bolt12ParseError get field0;
  @JsonKey(ignore: true)
  _$$FfiNodeError_Bolt12ParseImplCopyWith<_$FfiNodeError_Bolt12ParseImpl>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class _$$FfiNodeError_InvoiceRequestCreationFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvoiceRequestCreationFailedImplCopyWith(
          _$FfiNodeError_InvoiceRequestCreationFailedImpl value,
          $Res Function(_$FfiNodeError_InvoiceRequestCreationFailedImpl) then) =
      __$$FfiNodeError_InvoiceRequestCreationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvoiceRequestCreationFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_InvoiceRequestCreationFailedImpl>
    implements _$$FfiNodeError_InvoiceRequestCreationFailedImplCopyWith<$Res> {
  __$$FfiNodeError_InvoiceRequestCreationFailedImplCopyWithImpl(
      _$FfiNodeError_InvoiceRequestCreationFailedImpl _value,
      $Res Function(_$FfiNodeError_InvoiceRequestCreationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvoiceRequestCreationFailedImpl
    extends FfiNodeError_InvoiceRequestCreationFailed {
  const _$FfiNodeError_InvoiceRequestCreationFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invoiceRequestCreationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvoiceRequestCreationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invoiceRequestCreationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invoiceRequestCreationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invoiceRequestCreationFailed != null) {
      return invoiceRequestCreationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invoiceRequestCreationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invoiceRequestCreationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invoiceRequestCreationFailed != null) {
      return invoiceRequestCreationFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvoiceRequestCreationFailed extends FfiNodeError {
  const factory FfiNodeError_InvoiceRequestCreationFailed() =
      _$FfiNodeError_InvoiceRequestCreationFailedImpl;
  const FfiNodeError_InvoiceRequestCreationFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_OfferCreationFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_OfferCreationFailedImplCopyWith(
          _$FfiNodeError_OfferCreationFailedImpl value,
          $Res Function(_$FfiNodeError_OfferCreationFailedImpl) then) =
      __$$FfiNodeError_OfferCreationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_OfferCreationFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_OfferCreationFailedImpl>
    implements _$$FfiNodeError_OfferCreationFailedImplCopyWith<$Res> {
  __$$FfiNodeError_OfferCreationFailedImplCopyWithImpl(
      _$FfiNodeError_OfferCreationFailedImpl _value,
      $Res Function(_$FfiNodeError_OfferCreationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_OfferCreationFailedImpl
    extends FfiNodeError_OfferCreationFailed {
  const _$FfiNodeError_OfferCreationFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.offerCreationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_OfferCreationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return offerCreationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return offerCreationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (offerCreationFailed != null) {
      return offerCreationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return offerCreationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return offerCreationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (offerCreationFailed != null) {
      return offerCreationFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_OfferCreationFailed extends FfiNodeError {
  const factory FfiNodeError_OfferCreationFailed() =
      _$FfiNodeError_OfferCreationFailedImpl;
  const FfiNodeError_OfferCreationFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_RefundCreationFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_RefundCreationFailedImplCopyWith(
          _$FfiNodeError_RefundCreationFailedImpl value,
          $Res Function(_$FfiNodeError_RefundCreationFailedImpl) then) =
      __$$FfiNodeError_RefundCreationFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_RefundCreationFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_RefundCreationFailedImpl>
    implements _$$FfiNodeError_RefundCreationFailedImplCopyWith<$Res> {
  __$$FfiNodeError_RefundCreationFailedImplCopyWithImpl(
      _$FfiNodeError_RefundCreationFailedImpl _value,
      $Res Function(_$FfiNodeError_RefundCreationFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_RefundCreationFailedImpl
    extends FfiNodeError_RefundCreationFailed {
  const _$FfiNodeError_RefundCreationFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.refundCreationFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_RefundCreationFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return refundCreationFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return refundCreationFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (refundCreationFailed != null) {
      return refundCreationFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return refundCreationFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return refundCreationFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (refundCreationFailed != null) {
      return refundCreationFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_RefundCreationFailed extends FfiNodeError {
  const factory FfiNodeError_RefundCreationFailed() =
      _$FfiNodeError_RefundCreationFailedImpl;
  const FfiNodeError_RefundCreationFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_FeerateEstimationUpdateTimeoutImplCopyWith<
    $Res> {
  factory _$$FfiNodeError_FeerateEstimationUpdateTimeoutImplCopyWith(
          _$FfiNodeError_FeerateEstimationUpdateTimeoutImpl value,
          $Res Function(_$FfiNodeError_FeerateEstimationUpdateTimeoutImpl)
              then) =
      __$$FfiNodeError_FeerateEstimationUpdateTimeoutImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_FeerateEstimationUpdateTimeoutImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_FeerateEstimationUpdateTimeoutImpl>
    implements
        _$$FfiNodeError_FeerateEstimationUpdateTimeoutImplCopyWith<$Res> {
  __$$FfiNodeError_FeerateEstimationUpdateTimeoutImplCopyWithImpl(
      _$FfiNodeError_FeerateEstimationUpdateTimeoutImpl _value,
      $Res Function(_$FfiNodeError_FeerateEstimationUpdateTimeoutImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_FeerateEstimationUpdateTimeoutImpl
    extends FfiNodeError_FeerateEstimationUpdateTimeout {
  const _$FfiNodeError_FeerateEstimationUpdateTimeoutImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.feerateEstimationUpdateTimeout()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_FeerateEstimationUpdateTimeoutImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return feerateEstimationUpdateTimeout();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return feerateEstimationUpdateTimeout?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (feerateEstimationUpdateTimeout != null) {
      return feerateEstimationUpdateTimeout();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return feerateEstimationUpdateTimeout(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return feerateEstimationUpdateTimeout?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (feerateEstimationUpdateTimeout != null) {
      return feerateEstimationUpdateTimeout(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_FeerateEstimationUpdateTimeout
    extends FfiNodeError {
  const factory FfiNodeError_FeerateEstimationUpdateTimeout() =
      _$FfiNodeError_FeerateEstimationUpdateTimeoutImpl;
  const FfiNodeError_FeerateEstimationUpdateTimeout._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_WalletOperationTimeoutImplCopyWith<$Res> {
  factory _$$FfiNodeError_WalletOperationTimeoutImplCopyWith(
          _$FfiNodeError_WalletOperationTimeoutImpl value,
          $Res Function(_$FfiNodeError_WalletOperationTimeoutImpl) then) =
      __$$FfiNodeError_WalletOperationTimeoutImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_WalletOperationTimeoutImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_WalletOperationTimeoutImpl>
    implements _$$FfiNodeError_WalletOperationTimeoutImplCopyWith<$Res> {
  __$$FfiNodeError_WalletOperationTimeoutImplCopyWithImpl(
      _$FfiNodeError_WalletOperationTimeoutImpl _value,
      $Res Function(_$FfiNodeError_WalletOperationTimeoutImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_WalletOperationTimeoutImpl
    extends FfiNodeError_WalletOperationTimeout {
  const _$FfiNodeError_WalletOperationTimeoutImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.walletOperationTimeout()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_WalletOperationTimeoutImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return walletOperationTimeout();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return walletOperationTimeout?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (walletOperationTimeout != null) {
      return walletOperationTimeout();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return walletOperationTimeout(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return walletOperationTimeout?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (walletOperationTimeout != null) {
      return walletOperationTimeout(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_WalletOperationTimeout extends FfiNodeError {
  const factory FfiNodeError_WalletOperationTimeout() =
      _$FfiNodeError_WalletOperationTimeoutImpl;
  const FfiNodeError_WalletOperationTimeout._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_TxSyncTimeoutImplCopyWith<$Res> {
  factory _$$FfiNodeError_TxSyncTimeoutImplCopyWith(
          _$FfiNodeError_TxSyncTimeoutImpl value,
          $Res Function(_$FfiNodeError_TxSyncTimeoutImpl) then) =
      __$$FfiNodeError_TxSyncTimeoutImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_TxSyncTimeoutImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_TxSyncTimeoutImpl>
    implements _$$FfiNodeError_TxSyncTimeoutImplCopyWith<$Res> {
  __$$FfiNodeError_TxSyncTimeoutImplCopyWithImpl(
      _$FfiNodeError_TxSyncTimeoutImpl _value,
      $Res Function(_$FfiNodeError_TxSyncTimeoutImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_TxSyncTimeoutImpl extends FfiNodeError_TxSyncTimeout {
  const _$FfiNodeError_TxSyncTimeoutImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.txSyncTimeout()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_TxSyncTimeoutImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return txSyncTimeout();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return txSyncTimeout?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (txSyncTimeout != null) {
      return txSyncTimeout();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return txSyncTimeout(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return txSyncTimeout?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (txSyncTimeout != null) {
      return txSyncTimeout(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_TxSyncTimeout extends FfiNodeError {
  const factory FfiNodeError_TxSyncTimeout() = _$FfiNodeError_TxSyncTimeoutImpl;
  const FfiNodeError_TxSyncTimeout._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_GossipUpdateTimeoutImplCopyWith<$Res> {
  factory _$$FfiNodeError_GossipUpdateTimeoutImplCopyWith(
          _$FfiNodeError_GossipUpdateTimeoutImpl value,
          $Res Function(_$FfiNodeError_GossipUpdateTimeoutImpl) then) =
      __$$FfiNodeError_GossipUpdateTimeoutImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_GossipUpdateTimeoutImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_GossipUpdateTimeoutImpl>
    implements _$$FfiNodeError_GossipUpdateTimeoutImplCopyWith<$Res> {
  __$$FfiNodeError_GossipUpdateTimeoutImplCopyWithImpl(
      _$FfiNodeError_GossipUpdateTimeoutImpl _value,
      $Res Function(_$FfiNodeError_GossipUpdateTimeoutImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_GossipUpdateTimeoutImpl
    extends FfiNodeError_GossipUpdateTimeout {
  const _$FfiNodeError_GossipUpdateTimeoutImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.gossipUpdateTimeout()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_GossipUpdateTimeoutImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return gossipUpdateTimeout();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return gossipUpdateTimeout?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (gossipUpdateTimeout != null) {
      return gossipUpdateTimeout();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return gossipUpdateTimeout(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return gossipUpdateTimeout?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (gossipUpdateTimeout != null) {
      return gossipUpdateTimeout(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_GossipUpdateTimeout extends FfiNodeError {
  const factory FfiNodeError_GossipUpdateTimeout() =
      _$FfiNodeError_GossipUpdateTimeoutImpl;
  const FfiNodeError_GossipUpdateTimeout._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidOfferIdImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidOfferIdImplCopyWith(
          _$FfiNodeError_InvalidOfferIdImpl value,
          $Res Function(_$FfiNodeError_InvalidOfferIdImpl) then) =
      __$$FfiNodeError_InvalidOfferIdImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidOfferIdImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_InvalidOfferIdImpl>
    implements _$$FfiNodeError_InvalidOfferIdImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidOfferIdImplCopyWithImpl(
      _$FfiNodeError_InvalidOfferIdImpl _value,
      $Res Function(_$FfiNodeError_InvalidOfferIdImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidOfferIdImpl extends FfiNodeError_InvalidOfferId {
  const _$FfiNodeError_InvalidOfferIdImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidOfferId()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidOfferIdImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidOfferId();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidOfferId?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidOfferId != null) {
      return invalidOfferId();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidOfferId(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidOfferId?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidOfferId != null) {
      return invalidOfferId(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidOfferId extends FfiNodeError {
  const factory FfiNodeError_InvalidOfferId() =
      _$FfiNodeError_InvalidOfferIdImpl;
  const FfiNodeError_InvalidOfferId._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidNodeIdImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidNodeIdImplCopyWith(
          _$FfiNodeError_InvalidNodeIdImpl value,
          $Res Function(_$FfiNodeError_InvalidNodeIdImpl) then) =
      __$$FfiNodeError_InvalidNodeIdImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidNodeIdImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_InvalidNodeIdImpl>
    implements _$$FfiNodeError_InvalidNodeIdImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidNodeIdImplCopyWithImpl(
      _$FfiNodeError_InvalidNodeIdImpl _value,
      $Res Function(_$FfiNodeError_InvalidNodeIdImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidNodeIdImpl extends FfiNodeError_InvalidNodeId {
  const _$FfiNodeError_InvalidNodeIdImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidNodeId()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidNodeIdImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidNodeId();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidNodeId?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidNodeId != null) {
      return invalidNodeId();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidNodeId(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidNodeId?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidNodeId != null) {
      return invalidNodeId(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidNodeId extends FfiNodeError {
  const factory FfiNodeError_InvalidNodeId() = _$FfiNodeError_InvalidNodeIdImpl;
  const FfiNodeError_InvalidNodeId._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidOfferImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidOfferImplCopyWith(
          _$FfiNodeError_InvalidOfferImpl value,
          $Res Function(_$FfiNodeError_InvalidOfferImpl) then) =
      __$$FfiNodeError_InvalidOfferImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidOfferImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_InvalidOfferImpl>
    implements _$$FfiNodeError_InvalidOfferImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidOfferImplCopyWithImpl(
      _$FfiNodeError_InvalidOfferImpl _value,
      $Res Function(_$FfiNodeError_InvalidOfferImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidOfferImpl extends FfiNodeError_InvalidOffer {
  const _$FfiNodeError_InvalidOfferImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidOffer()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidOfferImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidOffer();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidOffer?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidOffer != null) {
      return invalidOffer();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidOffer(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidOffer?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidOffer != null) {
      return invalidOffer(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidOffer extends FfiNodeError {
  const factory FfiNodeError_InvalidOffer() = _$FfiNodeError_InvalidOfferImpl;
  const FfiNodeError_InvalidOffer._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidRefundImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidRefundImplCopyWith(
          _$FfiNodeError_InvalidRefundImpl value,
          $Res Function(_$FfiNodeError_InvalidRefundImpl) then) =
      __$$FfiNodeError_InvalidRefundImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidRefundImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_InvalidRefundImpl>
    implements _$$FfiNodeError_InvalidRefundImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidRefundImplCopyWithImpl(
      _$FfiNodeError_InvalidRefundImpl _value,
      $Res Function(_$FfiNodeError_InvalidRefundImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidRefundImpl extends FfiNodeError_InvalidRefund {
  const _$FfiNodeError_InvalidRefundImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidRefund()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidRefundImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidRefund();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidRefund?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidRefund != null) {
      return invalidRefund();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidRefund(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidRefund?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidRefund != null) {
      return invalidRefund(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidRefund extends FfiNodeError {
  const factory FfiNodeError_InvalidRefund() = _$FfiNodeError_InvalidRefundImpl;
  const FfiNodeError_InvalidRefund._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_UnsupportedCurrencyImplCopyWith<$Res> {
  factory _$$FfiNodeError_UnsupportedCurrencyImplCopyWith(
          _$FfiNodeError_UnsupportedCurrencyImpl value,
          $Res Function(_$FfiNodeError_UnsupportedCurrencyImpl) then) =
      __$$FfiNodeError_UnsupportedCurrencyImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_UnsupportedCurrencyImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_UnsupportedCurrencyImpl>
    implements _$$FfiNodeError_UnsupportedCurrencyImplCopyWith<$Res> {
  __$$FfiNodeError_UnsupportedCurrencyImplCopyWithImpl(
      _$FfiNodeError_UnsupportedCurrencyImpl _value,
      $Res Function(_$FfiNodeError_UnsupportedCurrencyImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_UnsupportedCurrencyImpl
    extends FfiNodeError_UnsupportedCurrency {
  const _$FfiNodeError_UnsupportedCurrencyImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.unsupportedCurrency()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_UnsupportedCurrencyImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return unsupportedCurrency();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return unsupportedCurrency?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (unsupportedCurrency != null) {
      return unsupportedCurrency();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return unsupportedCurrency(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return unsupportedCurrency?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (unsupportedCurrency != null) {
      return unsupportedCurrency(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_UnsupportedCurrency extends FfiNodeError {
  const factory FfiNodeError_UnsupportedCurrency() =
      _$FfiNodeError_UnsupportedCurrencyImpl;
  const FfiNodeError_UnsupportedCurrency._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_UriParameterParsingFailedImplCopyWith<$Res> {
  factory _$$FfiNodeError_UriParameterParsingFailedImplCopyWith(
          _$FfiNodeError_UriParameterParsingFailedImpl value,
          $Res Function(_$FfiNodeError_UriParameterParsingFailedImpl) then) =
      __$$FfiNodeError_UriParameterParsingFailedImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_UriParameterParsingFailedImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_UriParameterParsingFailedImpl>
    implements _$$FfiNodeError_UriParameterParsingFailedImplCopyWith<$Res> {
  __$$FfiNodeError_UriParameterParsingFailedImplCopyWithImpl(
      _$FfiNodeError_UriParameterParsingFailedImpl _value,
      $Res Function(_$FfiNodeError_UriParameterParsingFailedImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_UriParameterParsingFailedImpl
    extends FfiNodeError_UriParameterParsingFailed {
  const _$FfiNodeError_UriParameterParsingFailedImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.uriParameterParsingFailed()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_UriParameterParsingFailedImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return uriParameterParsingFailed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return uriParameterParsingFailed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (uriParameterParsingFailed != null) {
      return uriParameterParsingFailed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return uriParameterParsingFailed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return uriParameterParsingFailed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (uriParameterParsingFailed != null) {
      return uriParameterParsingFailed(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_UriParameterParsingFailed extends FfiNodeError {
  const factory FfiNodeError_UriParameterParsingFailed() =
      _$FfiNodeError_UriParameterParsingFailedImpl;
  const FfiNodeError_UriParameterParsingFailed._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidUriImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidUriImplCopyWith(
          _$FfiNodeError_InvalidUriImpl value,
          $Res Function(_$FfiNodeError_InvalidUriImpl) then) =
      __$$FfiNodeError_InvalidUriImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidUriImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_InvalidUriImpl>
    implements _$$FfiNodeError_InvalidUriImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidUriImplCopyWithImpl(
      _$FfiNodeError_InvalidUriImpl _value,
      $Res Function(_$FfiNodeError_InvalidUriImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidUriImpl extends FfiNodeError_InvalidUri {
  const _$FfiNodeError_InvalidUriImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidUri()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidUriImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidUri();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidUri?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidUri != null) {
      return invalidUri();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidUri(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidUri?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidUri != null) {
      return invalidUri(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidUri extends FfiNodeError {
  const factory FfiNodeError_InvalidUri() = _$FfiNodeError_InvalidUriImpl;
  const FfiNodeError_InvalidUri._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidQuantityImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidQuantityImplCopyWith(
          _$FfiNodeError_InvalidQuantityImpl value,
          $Res Function(_$FfiNodeError_InvalidQuantityImpl) then) =
      __$$FfiNodeError_InvalidQuantityImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidQuantityImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res, _$FfiNodeError_InvalidQuantityImpl>
    implements _$$FfiNodeError_InvalidQuantityImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidQuantityImplCopyWithImpl(
      _$FfiNodeError_InvalidQuantityImpl _value,
      $Res Function(_$FfiNodeError_InvalidQuantityImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidQuantityImpl extends FfiNodeError_InvalidQuantity {
  const _$FfiNodeError_InvalidQuantityImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidQuantity()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidQuantityImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidQuantity();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidQuantity?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidQuantity != null) {
      return invalidQuantity();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidQuantity(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidQuantity?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidQuantity != null) {
      return invalidQuantity(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidQuantity extends FfiNodeError {
  const factory FfiNodeError_InvalidQuantity() =
      _$FfiNodeError_InvalidQuantityImpl;
  const FfiNodeError_InvalidQuantity._() : super._();
}

/// @nodoc
abstract class _$$FfiNodeError_InvalidNodeAliasImplCopyWith<$Res> {
  factory _$$FfiNodeError_InvalidNodeAliasImplCopyWith(
          _$FfiNodeError_InvalidNodeAliasImpl value,
          $Res Function(_$FfiNodeError_InvalidNodeAliasImpl) then) =
      __$$FfiNodeError_InvalidNodeAliasImplCopyWithImpl<$Res>;
}

/// @nodoc
class __$$FfiNodeError_InvalidNodeAliasImplCopyWithImpl<$Res>
    extends _$FfiNodeErrorCopyWithImpl<$Res,
        _$FfiNodeError_InvalidNodeAliasImpl>
    implements _$$FfiNodeError_InvalidNodeAliasImplCopyWith<$Res> {
  __$$FfiNodeError_InvalidNodeAliasImplCopyWithImpl(
      _$FfiNodeError_InvalidNodeAliasImpl _value,
      $Res Function(_$FfiNodeError_InvalidNodeAliasImpl) _then)
      : super(_value, _then);
}

/// @nodoc

class _$FfiNodeError_InvalidNodeAliasImpl
    extends FfiNodeError_InvalidNodeAlias {
  const _$FfiNodeError_InvalidNodeAliasImpl() : super._();

  @override
  String toString() {
    return 'FfiNodeError.invalidNodeAlias()';
  }

  @override
  bool operator ==(Object other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is _$FfiNodeError_InvalidNodeAliasImpl);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() invalidTxid,
    required TResult Function() alreadyRunning,
    required TResult Function() notRunning,
    required TResult Function() onchainTxCreationFailed,
    required TResult Function() connectionFailed,
    required TResult Function() invoiceCreationFailed,
    required TResult Function() paymentSendingFailed,
    required TResult Function() probeSendingFailed,
    required TResult Function() channelCreationFailed,
    required TResult Function() channelClosingFailed,
    required TResult Function() channelConfigUpdateFailed,
    required TResult Function() persistenceFailed,
    required TResult Function() walletOperationFailed,
    required TResult Function() onchainTxSigningFailed,
    required TResult Function() messageSigningFailed,
    required TResult Function() txSyncFailed,
    required TResult Function() gossipUpdateFailed,
    required TResult Function() invalidAddress,
    required TResult Function() invalidSocketAddress,
    required TResult Function() invalidPublicKey,
    required TResult Function() invalidSecretKey,
    required TResult Function() invalidPaymentHash,
    required TResult Function() invalidPaymentPreimage,
    required TResult Function() invalidPaymentSecret,
    required TResult Function() invalidAmount,
    required TResult Function() invalidInvoice,
    required TResult Function() invalidChannelId,
    required TResult Function() invalidNetwork,
    required TResult Function() duplicatePayment,
    required TResult Function() insufficientFunds,
    required TResult Function() feerateEstimationUpdateFailed,
    required TResult Function() liquidityRequestFailed,
    required TResult Function() liquiditySourceUnavailable,
    required TResult Function() liquidityFeeTooHigh,
    required TResult Function() invalidPaymentId,
    required TResult Function(DecodeError field0) decode,
    required TResult Function(Bolt12ParseError field0) bolt12Parse,
    required TResult Function() invoiceRequestCreationFailed,
    required TResult Function() offerCreationFailed,
    required TResult Function() refundCreationFailed,
    required TResult Function() feerateEstimationUpdateTimeout,
    required TResult Function() walletOperationTimeout,
    required TResult Function() txSyncTimeout,
    required TResult Function() gossipUpdateTimeout,
    required TResult Function() invalidOfferId,
    required TResult Function() invalidNodeId,
    required TResult Function() invalidOffer,
    required TResult Function() invalidRefund,
    required TResult Function() unsupportedCurrency,
    required TResult Function() uriParameterParsingFailed,
    required TResult Function() invalidUri,
    required TResult Function() invalidQuantity,
    required TResult Function() invalidNodeAlias,
  }) {
    return invalidNodeAlias();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult? Function()? invalidTxid,
    TResult? Function()? alreadyRunning,
    TResult? Function()? notRunning,
    TResult? Function()? onchainTxCreationFailed,
    TResult? Function()? connectionFailed,
    TResult? Function()? invoiceCreationFailed,
    TResult? Function()? paymentSendingFailed,
    TResult? Function()? probeSendingFailed,
    TResult? Function()? channelCreationFailed,
    TResult? Function()? channelClosingFailed,
    TResult? Function()? channelConfigUpdateFailed,
    TResult? Function()? persistenceFailed,
    TResult? Function()? walletOperationFailed,
    TResult? Function()? onchainTxSigningFailed,
    TResult? Function()? messageSigningFailed,
    TResult? Function()? txSyncFailed,
    TResult? Function()? gossipUpdateFailed,
    TResult? Function()? invalidAddress,
    TResult? Function()? invalidSocketAddress,
    TResult? Function()? invalidPublicKey,
    TResult? Function()? invalidSecretKey,
    TResult? Function()? invalidPaymentHash,
    TResult? Function()? invalidPaymentPreimage,
    TResult? Function()? invalidPaymentSecret,
    TResult? Function()? invalidAmount,
    TResult? Function()? invalidInvoice,
    TResult? Function()? invalidChannelId,
    TResult? Function()? invalidNetwork,
    TResult? Function()? duplicatePayment,
    TResult? Function()? insufficientFunds,
    TResult? Function()? feerateEstimationUpdateFailed,
    TResult? Function()? liquidityRequestFailed,
    TResult? Function()? liquiditySourceUnavailable,
    TResult? Function()? liquidityFeeTooHigh,
    TResult? Function()? invalidPaymentId,
    TResult? Function(DecodeError field0)? decode,
    TResult? Function(Bolt12ParseError field0)? bolt12Parse,
    TResult? Function()? invoiceRequestCreationFailed,
    TResult? Function()? offerCreationFailed,
    TResult? Function()? refundCreationFailed,
    TResult? Function()? feerateEstimationUpdateTimeout,
    TResult? Function()? walletOperationTimeout,
    TResult? Function()? txSyncTimeout,
    TResult? Function()? gossipUpdateTimeout,
    TResult? Function()? invalidOfferId,
    TResult? Function()? invalidNodeId,
    TResult? Function()? invalidOffer,
    TResult? Function()? invalidRefund,
    TResult? Function()? unsupportedCurrency,
    TResult? Function()? uriParameterParsingFailed,
    TResult? Function()? invalidUri,
    TResult? Function()? invalidQuantity,
    TResult? Function()? invalidNodeAlias,
  }) {
    return invalidNodeAlias?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? invalidTxid,
    TResult Function()? alreadyRunning,
    TResult Function()? notRunning,
    TResult Function()? onchainTxCreationFailed,
    TResult Function()? connectionFailed,
    TResult Function()? invoiceCreationFailed,
    TResult Function()? paymentSendingFailed,
    TResult Function()? probeSendingFailed,
    TResult Function()? channelCreationFailed,
    TResult Function()? channelClosingFailed,
    TResult Function()? channelConfigUpdateFailed,
    TResult Function()? persistenceFailed,
    TResult Function()? walletOperationFailed,
    TResult Function()? onchainTxSigningFailed,
    TResult Function()? messageSigningFailed,
    TResult Function()? txSyncFailed,
    TResult Function()? gossipUpdateFailed,
    TResult Function()? invalidAddress,
    TResult Function()? invalidSocketAddress,
    TResult Function()? invalidPublicKey,
    TResult Function()? invalidSecretKey,
    TResult Function()? invalidPaymentHash,
    TResult Function()? invalidPaymentPreimage,
    TResult Function()? invalidPaymentSecret,
    TResult Function()? invalidAmount,
    TResult Function()? invalidInvoice,
    TResult Function()? invalidChannelId,
    TResult Function()? invalidNetwork,
    TResult Function()? duplicatePayment,
    TResult Function()? insufficientFunds,
    TResult Function()? feerateEstimationUpdateFailed,
    TResult Function()? liquidityRequestFailed,
    TResult Function()? liquiditySourceUnavailable,
    TResult Function()? liquidityFeeTooHigh,
    TResult Function()? invalidPaymentId,
    TResult Function(DecodeError field0)? decode,
    TResult Function(Bolt12ParseError field0)? bolt12Parse,
    TResult Function()? invoiceRequestCreationFailed,
    TResult Function()? offerCreationFailed,
    TResult Function()? refundCreationFailed,
    TResult Function()? feerateEstimationUpdateTimeout,
    TResult Function()? walletOperationTimeout,
    TResult Function()? txSyncTimeout,
    TResult Function()? gossipUpdateTimeout,
    TResult Function()? invalidOfferId,
    TResult Function()? invalidNodeId,
    TResult Function()? invalidOffer,
    TResult Function()? invalidRefund,
    TResult Function()? unsupportedCurrency,
    TResult Function()? uriParameterParsingFailed,
    TResult Function()? invalidUri,
    TResult Function()? invalidQuantity,
    TResult Function()? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidNodeAlias != null) {
      return invalidNodeAlias();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(FfiNodeError_InvalidTxid value) invalidTxid,
    required TResult Function(FfiNodeError_AlreadyRunning value) alreadyRunning,
    required TResult Function(FfiNodeError_NotRunning value) notRunning,
    required TResult Function(FfiNodeError_OnchainTxCreationFailed value)
        onchainTxCreationFailed,
    required TResult Function(FfiNodeError_ConnectionFailed value)
        connectionFailed,
    required TResult Function(FfiNodeError_InvoiceCreationFailed value)
        invoiceCreationFailed,
    required TResult Function(FfiNodeError_PaymentSendingFailed value)
        paymentSendingFailed,
    required TResult Function(FfiNodeError_ProbeSendingFailed value)
        probeSendingFailed,
    required TResult Function(FfiNodeError_ChannelCreationFailed value)
        channelCreationFailed,
    required TResult Function(FfiNodeError_ChannelClosingFailed value)
        channelClosingFailed,
    required TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)
        channelConfigUpdateFailed,
    required TResult Function(FfiNodeError_PersistenceFailed value)
        persistenceFailed,
    required TResult Function(FfiNodeError_WalletOperationFailed value)
        walletOperationFailed,
    required TResult Function(FfiNodeError_OnchainTxSigningFailed value)
        onchainTxSigningFailed,
    required TResult Function(FfiNodeError_MessageSigningFailed value)
        messageSigningFailed,
    required TResult Function(FfiNodeError_TxSyncFailed value) txSyncFailed,
    required TResult Function(FfiNodeError_GossipUpdateFailed value)
        gossipUpdateFailed,
    required TResult Function(FfiNodeError_InvalidAddress value) invalidAddress,
    required TResult Function(FfiNodeError_InvalidSocketAddress value)
        invalidSocketAddress,
    required TResult Function(FfiNodeError_InvalidPublicKey value)
        invalidPublicKey,
    required TResult Function(FfiNodeError_InvalidSecretKey value)
        invalidSecretKey,
    required TResult Function(FfiNodeError_InvalidPaymentHash value)
        invalidPaymentHash,
    required TResult Function(FfiNodeError_InvalidPaymentPreimage value)
        invalidPaymentPreimage,
    required TResult Function(FfiNodeError_InvalidPaymentSecret value)
        invalidPaymentSecret,
    required TResult Function(FfiNodeError_InvalidAmount value) invalidAmount,
    required TResult Function(FfiNodeError_InvalidInvoice value) invalidInvoice,
    required TResult Function(FfiNodeError_InvalidChannelId value)
        invalidChannelId,
    required TResult Function(FfiNodeError_InvalidNetwork value) invalidNetwork,
    required TResult Function(FfiNodeError_DuplicatePayment value)
        duplicatePayment,
    required TResult Function(FfiNodeError_InsufficientFunds value)
        insufficientFunds,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)
        feerateEstimationUpdateFailed,
    required TResult Function(FfiNodeError_LiquidityRequestFailed value)
        liquidityRequestFailed,
    required TResult Function(FfiNodeError_LiquiditySourceUnavailable value)
        liquiditySourceUnavailable,
    required TResult Function(FfiNodeError_LiquidityFeeTooHigh value)
        liquidityFeeTooHigh,
    required TResult Function(FfiNodeError_InvalidPaymentId value)
        invalidPaymentId,
    required TResult Function(FfiNodeError_Decode value) decode,
    required TResult Function(FfiNodeError_Bolt12Parse value) bolt12Parse,
    required TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)
        invoiceRequestCreationFailed,
    required TResult Function(FfiNodeError_OfferCreationFailed value)
        offerCreationFailed,
    required TResult Function(FfiNodeError_RefundCreationFailed value)
        refundCreationFailed,
    required TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)
        feerateEstimationUpdateTimeout,
    required TResult Function(FfiNodeError_WalletOperationTimeout value)
        walletOperationTimeout,
    required TResult Function(FfiNodeError_TxSyncTimeout value) txSyncTimeout,
    required TResult Function(FfiNodeError_GossipUpdateTimeout value)
        gossipUpdateTimeout,
    required TResult Function(FfiNodeError_InvalidOfferId value) invalidOfferId,
    required TResult Function(FfiNodeError_InvalidNodeId value) invalidNodeId,
    required TResult Function(FfiNodeError_InvalidOffer value) invalidOffer,
    required TResult Function(FfiNodeError_InvalidRefund value) invalidRefund,
    required TResult Function(FfiNodeError_UnsupportedCurrency value)
        unsupportedCurrency,
    required TResult Function(FfiNodeError_UriParameterParsingFailed value)
        uriParameterParsingFailed,
    required TResult Function(FfiNodeError_InvalidUri value) invalidUri,
    required TResult Function(FfiNodeError_InvalidQuantity value)
        invalidQuantity,
    required TResult Function(FfiNodeError_InvalidNodeAlias value)
        invalidNodeAlias,
  }) {
    return invalidNodeAlias(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult? Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult? Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult? Function(FfiNodeError_NotRunning value)? notRunning,
    TResult? Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult? Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult? Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult? Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult? Function(FfiNodeError_ProbeSendingFailed value)?
        probeSendingFailed,
    TResult? Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult? Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult? Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult? Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult? Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult? Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult? Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult? Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult? Function(FfiNodeError_GossipUpdateFailed value)?
        gossipUpdateFailed,
    TResult? Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult? Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult? Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult? Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult? Function(FfiNodeError_InvalidPaymentHash value)?
        invalidPaymentHash,
    TResult? Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult? Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult? Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult? Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult? Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult? Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult? Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult? Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult? Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult? Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult? Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult? Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult? Function(FfiNodeError_Decode value)? decode,
    TResult? Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult? Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult? Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult? Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult? Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult? Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult? Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult? Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult? Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult? Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult? Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult? Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult? Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult? Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult? Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult? Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult? Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
  }) {
    return invalidNodeAlias?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(FfiNodeError_InvalidTxid value)? invalidTxid,
    TResult Function(FfiNodeError_AlreadyRunning value)? alreadyRunning,
    TResult Function(FfiNodeError_NotRunning value)? notRunning,
    TResult Function(FfiNodeError_OnchainTxCreationFailed value)?
        onchainTxCreationFailed,
    TResult Function(FfiNodeError_ConnectionFailed value)? connectionFailed,
    TResult Function(FfiNodeError_InvoiceCreationFailed value)?
        invoiceCreationFailed,
    TResult Function(FfiNodeError_PaymentSendingFailed value)?
        paymentSendingFailed,
    TResult Function(FfiNodeError_ProbeSendingFailed value)? probeSendingFailed,
    TResult Function(FfiNodeError_ChannelCreationFailed value)?
        channelCreationFailed,
    TResult Function(FfiNodeError_ChannelClosingFailed value)?
        channelClosingFailed,
    TResult Function(FfiNodeError_ChannelConfigUpdateFailed value)?
        channelConfigUpdateFailed,
    TResult Function(FfiNodeError_PersistenceFailed value)? persistenceFailed,
    TResult Function(FfiNodeError_WalletOperationFailed value)?
        walletOperationFailed,
    TResult Function(FfiNodeError_OnchainTxSigningFailed value)?
        onchainTxSigningFailed,
    TResult Function(FfiNodeError_MessageSigningFailed value)?
        messageSigningFailed,
    TResult Function(FfiNodeError_TxSyncFailed value)? txSyncFailed,
    TResult Function(FfiNodeError_GossipUpdateFailed value)? gossipUpdateFailed,
    TResult Function(FfiNodeError_InvalidAddress value)? invalidAddress,
    TResult Function(FfiNodeError_InvalidSocketAddress value)?
        invalidSocketAddress,
    TResult Function(FfiNodeError_InvalidPublicKey value)? invalidPublicKey,
    TResult Function(FfiNodeError_InvalidSecretKey value)? invalidSecretKey,
    TResult Function(FfiNodeError_InvalidPaymentHash value)? invalidPaymentHash,
    TResult Function(FfiNodeError_InvalidPaymentPreimage value)?
        invalidPaymentPreimage,
    TResult Function(FfiNodeError_InvalidPaymentSecret value)?
        invalidPaymentSecret,
    TResult Function(FfiNodeError_InvalidAmount value)? invalidAmount,
    TResult Function(FfiNodeError_InvalidInvoice value)? invalidInvoice,
    TResult Function(FfiNodeError_InvalidChannelId value)? invalidChannelId,
    TResult Function(FfiNodeError_InvalidNetwork value)? invalidNetwork,
    TResult Function(FfiNodeError_DuplicatePayment value)? duplicatePayment,
    TResult Function(FfiNodeError_InsufficientFunds value)? insufficientFunds,
    TResult Function(FfiNodeError_FeerateEstimationUpdateFailed value)?
        feerateEstimationUpdateFailed,
    TResult Function(FfiNodeError_LiquidityRequestFailed value)?
        liquidityRequestFailed,
    TResult Function(FfiNodeError_LiquiditySourceUnavailable value)?
        liquiditySourceUnavailable,
    TResult Function(FfiNodeError_LiquidityFeeTooHigh value)?
        liquidityFeeTooHigh,
    TResult Function(FfiNodeError_InvalidPaymentId value)? invalidPaymentId,
    TResult Function(FfiNodeError_Decode value)? decode,
    TResult Function(FfiNodeError_Bolt12Parse value)? bolt12Parse,
    TResult Function(FfiNodeError_InvoiceRequestCreationFailed value)?
        invoiceRequestCreationFailed,
    TResult Function(FfiNodeError_OfferCreationFailed value)?
        offerCreationFailed,
    TResult Function(FfiNodeError_RefundCreationFailed value)?
        refundCreationFailed,
    TResult Function(FfiNodeError_FeerateEstimationUpdateTimeout value)?
        feerateEstimationUpdateTimeout,
    TResult Function(FfiNodeError_WalletOperationTimeout value)?
        walletOperationTimeout,
    TResult Function(FfiNodeError_TxSyncTimeout value)? txSyncTimeout,
    TResult Function(FfiNodeError_GossipUpdateTimeout value)?
        gossipUpdateTimeout,
    TResult Function(FfiNodeError_InvalidOfferId value)? invalidOfferId,
    TResult Function(FfiNodeError_InvalidNodeId value)? invalidNodeId,
    TResult Function(FfiNodeError_InvalidOffer value)? invalidOffer,
    TResult Function(FfiNodeError_InvalidRefund value)? invalidRefund,
    TResult Function(FfiNodeError_UnsupportedCurrency value)?
        unsupportedCurrency,
    TResult Function(FfiNodeError_UriParameterParsingFailed value)?
        uriParameterParsingFailed,
    TResult Function(FfiNodeError_InvalidUri value)? invalidUri,
    TResult Function(FfiNodeError_InvalidQuantity value)? invalidQuantity,
    TResult Function(FfiNodeError_InvalidNodeAlias value)? invalidNodeAlias,
    required TResult orElse(),
  }) {
    if (invalidNodeAlias != null) {
      return invalidNodeAlias(this);
    }
    return orElse();
  }
}

abstract class FfiNodeError_InvalidNodeAlias extends FfiNodeError {
  const factory FfiNodeError_InvalidNodeAlias() =
      _$FfiNodeError_InvalidNodeAliasImpl;
  const FfiNodeError_InvalidNodeAlias._() : super._();
}
